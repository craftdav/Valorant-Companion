from PySide6.QtWidgets import QApplication, QMainWindow, QLabel, QVBoxLayout, QHBoxLayout, QWidget, QScrollArea
from PySide6.QtGui import QPixmap, QGuiApplication
from PySide6.QtCore import Qt
import os
from lineup_ui import Ui_MainWindow

class MyApp(QMainWindow):
    def __init__(self):
        super().__init__()
        
        #Qt template használata
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)

        # Görgethető terület
        self.scroll_area = self.ui.scrollArea
        self.scroll_area.hide()


        # Logo létrehozása és elhelyezése
        self.logoPixmap = QPixmap("Valorant-Companion/VC-Logo.png").scaled(261, 261, Qt.KeepAspectRatio, Qt.SmoothTransformation)
        self.logo_label = QLabel(self)
        self.logo_label.setPixmap(self.logoPixmap)
        self.logo_label.setScaledContents(False)
        self.logo_label.resize(self.logoPixmap.size())
        self.logo_label.move(0, 21)


        # Astra menüben x gomb lenyomásakor
        self.ui.actionAstraAbyssA.triggered.connect(lambda: self.showLineups("Astra","Abyss","A"))
        self.ui.actionAstraAbyssMid.triggered.connect(lambda: self.showLineups("Astra","Abyss","Mid"))
        self.ui.actionAstraAbyssB.triggered.connect(lambda: self.showLineups("Astra","Abyss","B"))
        self.ui.actionAstraAscentA.triggered.connect(lambda: self.showLineups("Astra","Ascent","A"))
        self.ui.actionAstraAscentMid.triggered.connect(lambda: self.showLineups("Astra","Ascent","Mid"))
        self.ui.actionAstraAscentB.triggered.connect(lambda: self.showLineups("Astra","Ascent","B"))
        self.ui.actionAstraBindA.triggered.connect(lambda: self.showLineups("Astra","Bind", "A"))
        self.ui.actionAstraBindB.triggered.connect(lambda: self.showLineups("Astra","Bind", "B"))
        self.ui.actionAstraBreezeA.triggered.connect(lambda: self.showLineups("Astra","Breeze","A"))
        self.ui.actionAstraBreezeMid.triggered.connect(lambda: self.showLineups("Astra","Breeze","Mid"))
        self.ui.actionAstraBreezeA.triggered.connect(lambda: self.showLineups("Astra","Breeze","B"))
        self.ui.actionAstraFractureA.triggered.connect(lambda: self.showLineups("Astra","Fracture","A"))
        self.ui.actionAstraFractureMid.triggered.connect(lambda: self.showLineups("Astra","Fracture","Mid"))
        self.ui.actionAstraFractureB.triggered.connect(lambda: self.showLineups("Astra","Fracture","B"))
        self.ui.actionAstraHavenA.triggered.connect(lambda: self.showLineups("Astra","Haven","A"))
        self.ui.actionAstraHavenB.triggered.connect(lambda: self.showLineups("Astra","Haven","B"))
        self.ui.actionAstraHavenC.triggered.connect(lambda: self.showLineups("Astra","Haven","C"))
        self.ui.actionAstraIceboxA.triggered.connect(lambda: self.showLineups("Astra","Icebox","A"))
        self.ui.actionAstraIceboxMid.triggered.connect(lambda: self.showLineups("Astra","Icebox","Mid"))
        self.ui.actionAstraIceboxB.triggered.connect(lambda: self.showLineups("Astra","Icebox","B"))
        self.ui.actionAstraLotusA.triggered.connect(lambda: self.showLineups("Astra","Lotus","A"))
        self.ui.actionAstraLotusB.triggered.connect(lambda: self.showLineups("Astra","Lotus","B"))
        self.ui.actionAstraLotusC.triggered.connect(lambda: self.showLineups("Astra","Lotus","C"))
        self.ui.actionAstraPearlA.triggered.connect(lambda: self.showLineups("Astra","Peral","A"))
        self.ui.actionAstraPearlMid.triggered.connect(lambda: self.showLineups("Astra","Pearl","Mid"))
        self.ui.actionAstraPearlB.triggered.connect(lambda: self.showLineups("Astra","Pearl","B"))
        self.ui.actionAstraSplitA.triggered.connect(lambda: self.showLineups("Astra","Split","A"))
        self.ui.actionAstraSplitMid.triggered.connect(lambda: self.showLineups("Astra","Split","Mid"))
        self.ui.actionAstraSplitB.triggered.connect(lambda: self.showLineups("Astra","Split","B"))
        self.ui.actionAstraSunsetA.triggered.connect(lambda: self.showLineups("Astra","Sunset","A"))
        self.ui.actionAstraSunsetMid.triggered.connect(lambda: self.showLineups("Astra","Sunset","Mid"))
        self.ui.actionAstraSunsetB.triggered.connect(lambda: self.showLineups("Astra","Sunset","B"))

        # Breach menüben x gomb lenyomásakor
        self.ui.actionBreachAbyssA.triggered.connect(lambda: self.showLineups("Breach","Abyss","A"))
        self.ui.actionBreachAbyssMid.triggered.connect(lambda: self.showLineups("Breach","Abyss","Mid"))
        self.ui.actionBreachAbyssB.triggered.connect(lambda: self.showLineups("Breach","Abyss","B"))
        self.ui.actionBreachAscentA.triggered.connect(lambda: self.showLineups("Breach","Ascent","A"))
        self.ui.actionBreachAscentMid.triggered.connect(lambda: self.showLineups("Breach","Ascent","Mid"))
        self.ui.actionBreachAscentB.triggered.connect(lambda: self.showLineups("Breach","Ascent","B"))
        self.ui.actionBreachBindA.triggered.connect(lambda: self.showLineups("Breach","Bind", "A"))
        self.ui.actionBreachBindB.triggered.connect(lambda: self.showLineups("Breach","Bind", "B"))
        self.ui.actionBreachBreezeA.triggered.connect(lambda: self.showLineups("Breach","Breeze","A"))
        self.ui.actionBreachBreezeMid.triggered.connect(lambda: self.showLineups("Breach","Breeze","Mid"))
        self.ui.actionBreachBreezeA.triggered.connect(lambda: self.showLineups("Breach","Breeze","B"))
        self.ui.actionBreachFractureA.triggered.connect(lambda: self.showLineups("Breach","Fracture","A"))
        self.ui.actionBreachFractureMid.triggered.connect(lambda: self.showLineups("Breach","Fracture","Mid"))
        self.ui.actionBreachFractureB.triggered.connect(lambda: self.showLineups("Breach","Fracture","B"))
        self.ui.actionBreachHavenA.triggered.connect(lambda: self.showLineups("Breach","Haven","A"))
        self.ui.actionBreachHavenB.triggered.connect(lambda: self.showLineups("Breach","Haven","B"))
        self.ui.actionBreachHavenC.triggered.connect(lambda: self.showLineups("Breach","Haven","C"))
        self.ui.actionBreachIceboxA.triggered.connect(lambda: self.showLineups("Breach","Icebox","A"))
        self.ui.actionBreachIceboxMid.triggered.connect(lambda: self.showLineups("Breach","Icebox","Mid"))
        self.ui.actionBreachIceboxB.triggered.connect(lambda: self.showLineups("Breach","Icebox","B"))
        self.ui.actionBreachLotusA.triggered.connect(lambda: self.showLineups("Breach","Lotus","A"))
        self.ui.actionBreachLotusB.triggered.connect(lambda: self.showLineups("Breach","Lotus","B"))
        self.ui.actionBreachLotusC.triggered.connect(lambda: self.showLineups("Breach","Lotus","C"))
        self.ui.actionBreachPearlA.triggered.connect(lambda: self.showLineups("Breach","Peral","A"))
        self.ui.actionBreachPearlMid.triggered.connect(lambda: self.showLineups("Breach","Pearl","Mid"))
        self.ui.actionBreachPearlB.triggered.connect(lambda: self.showLineups("Breach","Pearl","B"))
        self.ui.actionBreachSplitA.triggered.connect(lambda: self.showLineups("Breach","Split","A"))
        self.ui.actionBreachSplitMid.triggered.connect(lambda: self.showLineups("Breach","Split","Mid"))
        self.ui.actionBreachSplitB.triggered.connect(lambda: self.showLineups("Breach","Split","B"))
        self.ui.actionBreachSunsetA.triggered.connect(lambda: self.showLineups("Breach","Sunset","A"))
        self.ui.actionBreachSunsetMid.triggered.connect(lambda: self.showLineups("Breach","Sunset","Mid"))
        self.ui.actionBreachSunsetB.triggered.connect(lambda: self.showLineups("Breach","Sunset","B"))

        # Brimstone menüben x gomb lenyomásakor
        self.ui.actionBrimstoneAbyssA.triggered.connect(lambda: self.showLineups("Brimstone","Abyss","A"))
        self.ui.actionBrimstoneAbyssMid.triggered.connect(lambda: self.showLineups("Brimstone","Abyss","Mid"))
        self.ui.actionBrimstoneAbyssB.triggered.connect(lambda: self.showLineups("Brimstone","Abyss","B"))
        self.ui.actionBrimstoneAscentA.triggered.connect(lambda: self.showLineups("Brimstone","Ascent","A"))
        self.ui.actionBrimstoneAscentMid.triggered.connect(lambda: self.showLineups("Brimstone","Ascent","Mid"))
        self.ui.actionBrimstoneAscentB.triggered.connect(lambda: self.showLineups("Brimstone","Ascent","B"))
        self.ui.actionBrimstoneBindA.triggered.connect(lambda: self.showLineups("Brimstone","Bind", "A"))
        self.ui.actionBrimstoneBindB.triggered.connect(lambda: self.showLineups("Brimstone","Bind", "B"))
        self.ui.actionBrimstoneBreezeA.triggered.connect(lambda: self.showLineups("Brimstone","Breeze","A"))
        self.ui.actionBrimstoneBreezeMid.triggered.connect(lambda: self.showLineups("Brimstone","Breeze","Mid"))
        self.ui.actionBrimstoneBreezeA.triggered.connect(lambda: self.showLineups("Brimstone","Breeze","B"))
        self.ui.actionBrimstoneFractureA.triggered.connect(lambda: self.showLineups("Brimstone","Fracture","A"))
        self.ui.actionBrimstoneFractureMid.triggered.connect(lambda: self.showLineups("Brimstone","Fracture","Mid"))
        self.ui.actionBrimstoneFractureB.triggered.connect(lambda: self.showLineups("Brimstone","Fracture","B"))
        self.ui.actionBrimstoneHavenA.triggered.connect(lambda: self.showLineups("Brimstone","Haven","A"))
        self.ui.actionBrimstoneHavenB.triggered.connect(lambda: self.showLineups("Brimstone","Haven","B"))
        self.ui.actionBrimstoneHavenC.triggered.connect(lambda: self.showLineups("Brimstone","Haven","C"))
        self.ui.actionBrimstoneIceboxA.triggered.connect(lambda: self.showLineups("Brimstone","Icebox","A"))
        self.ui.actionBrimstoneIceboxMid.triggered.connect(lambda: self.showLineups("Brimstone","Icebox","Mid"))
        self.ui.actionBrimstoneIceboxB.triggered.connect(lambda: self.showLineups("Brimstone","Icebox","B"))
        self.ui.actionBrimstoneLotusA.triggered.connect(lambda: self.showLineups("Brimstone","Lotus","A"))
        self.ui.actionBrimstoneLotusB.triggered.connect(lambda: self.showLineups("Brimstone","Lotus","B"))
        self.ui.actionBrimstoneLotusC.triggered.connect(lambda: self.showLineups("Brimstone","Lotus","C"))
        self.ui.actionBrimstonePearlA.triggered.connect(lambda: self.showLineups("Brimstone","Peral","A"))
        self.ui.actionBrimstonePearlMid.triggered.connect(lambda: self.showLineups("Brimstone","Pearl","Mid"))
        self.ui.actionBrimstonePearlB.triggered.connect(lambda: self.showLineups("Brimstone","Pearl","B"))
        self.ui.actionBrimstoneSplitA.triggered.connect(lambda: self.showLineups("Brimstone","Split","A"))
        self.ui.actionBrimstoneSplitMid.triggered.connect(lambda: self.showLineups("Brimstone","Split","Mid"))
        self.ui.actionBrimstoneSplitB.triggered.connect(lambda: self.showLineups("Brimstone","Split","B"))
        self.ui.actionBrimstoneSunsetA.triggered.connect(lambda: self.showLineups("Brimstone","Sunset","A"))
        self.ui.actionBrimstoneSunsetMid.triggered.connect(lambda: self.showLineups("Brimstone","Sunset","Mid"))
        self.ui.actionBrimstoneSunsetB.triggered.connect(lambda: self.showLineups("Brimstone","Sunset","B"))

        # Chamber menüben x gomb lenyomásakor
        self.ui.actionChamberAbyssA.triggered.connect(lambda: self.showLineups("Chamber","Abyss","A"))
        self.ui.actionChamberAbyssMid.triggered.connect(lambda: self.showLineups("Chamber","Abyss","Mid"))
        self.ui.actionChamberAbyssB.triggered.connect(lambda: self.showLineups("Chamber","Abyss","B"))
        self.ui.actionChamberAscentA.triggered.connect(lambda: self.showLineups("Chamber","Ascent","A"))
        self.ui.actionChamberAscentMid.triggered.connect(lambda: self.showLineups("Chamber","Ascent","Mid"))
        self.ui.actionChamberAscentB.triggered.connect(lambda: self.showLineups("Chamber","Ascent","B"))
        self.ui.actionChamberBindA.triggered.connect(lambda: self.showLineups("Chamber","Bind", "A"))
        self.ui.actionChamberBindB.triggered.connect(lambda: self.showLineups("Chamber","Bind", "B"))
        self.ui.actionChamberBreezeA.triggered.connect(lambda: self.showLineups("Chamber","Breeze","A"))
        self.ui.actionChamberBreezeMid.triggered.connect(lambda: self.showLineups("Chamber","Breeze","Mid"))
        self.ui.actionChamberBreezeA.triggered.connect(lambda: self.showLineups("Chamber","Breeze","B"))
        self.ui.actionChamberFractureA.triggered.connect(lambda: self.showLineups("Chamber","Fracture","A"))
        self.ui.actionChamberFractureMid.triggered.connect(lambda: self.showLineups("Chamber","Fracture","Mid"))
        self.ui.actionChamberFractureB.triggered.connect(lambda: self.showLineups("Chamber","Fracture","B"))
        self.ui.actionChamberHavenA.triggered.connect(lambda: self.showLineups("Chamber","Haven","A"))
        self.ui.actionChamberHavenB.triggered.connect(lambda: self.showLineups("Chamber","Haven","B"))
        self.ui.actionChamberHavenC.triggered.connect(lambda: self.showLineups("Chamber","Haven","C"))
        self.ui.actionChamberIceboxA.triggered.connect(lambda: self.showLineups("Chamber","Icebox","A"))
        self.ui.actionChamberIceboxMid.triggered.connect(lambda: self.showLineups("Chamber","Icebox","Mid"))
        self.ui.actionChamberIceboxB.triggered.connect(lambda: self.showLineups("Chamber","Icebox","B"))
        self.ui.actionChamberLotusA.triggered.connect(lambda: self.showLineups("Chamber","Lotus","A"))
        self.ui.actionChamberLotusB.triggered.connect(lambda: self.showLineups("Chamber","Lotus","B"))
        self.ui.actionChamberLotusC.triggered.connect(lambda: self.showLineups("Chamber","Lotus","C"))
        self.ui.actionChamberPearlA.triggered.connect(lambda: self.showLineups("Chamber","Peral","A"))
        self.ui.actionChamberPearlMid.triggered.connect(lambda: self.showLineups("Chamber","Pearl","Mid"))
        self.ui.actionChamberPearlB.triggered.connect(lambda: self.showLineups("Chamber","Pearl","B"))
        self.ui.actionChamberSplitA.triggered.connect(lambda: self.showLineups("Chamber","Split","A"))
        self.ui.actionChamberSplitMid.triggered.connect(lambda: self.showLineups("Chamber","Split","Mid"))
        self.ui.actionChamberSplitB.triggered.connect(lambda: self.showLineups("Chamber","Split","B"))
        self.ui.actionChamberSunsetA.triggered.connect(lambda: self.showLineups("Chamber","Sunset","A"))
        self.ui.actionChamberSunsetMid.triggered.connect(lambda: self.showLineups("Chamber","Sunset","Mid"))
        self.ui.actionChamberSunsetB.triggered.connect(lambda: self.showLineups("Chamber","Sunset","B"))

        # Clove menüben x gomb lenyomásakor
        self.ui.actionCloveAbyssA.triggered.connect(lambda: self.showLineups("Clove","Abyss","A"))
        self.ui.actionCloveAbyssMid.triggered.connect(lambda: self.showLineups("Clove","Abyss","Mid"))
        self.ui.actionCloveAbyssB.triggered.connect(lambda: self.showLineups("Clove","Abyss","B"))
        self.ui.actionCloveAscentA.triggered.connect(lambda: self.showLineups("Clove","Ascent","A"))
        self.ui.actionCloveAscentMid.triggered.connect(lambda: self.showLineups("Clove","Ascent","Mid"))
        self.ui.actionCloveAscentB.triggered.connect(lambda: self.showLineups("Clove","Ascent","B"))
        self.ui.actionCloveBindA.triggered.connect(lambda: self.showLineups("Clove","Bind", "A"))
        self.ui.actionCloveBindB.triggered.connect(lambda: self.showLineups("Clove","Bind", "B"))
        self.ui.actionCloveBreezeA.triggered.connect(lambda: self.showLineups("Clove","Breeze","A"))
        self.ui.actionCloveBreezeMid.triggered.connect(lambda: self.showLineups("Clove","Breeze","Mid"))
        self.ui.actionCloveBreezeA.triggered.connect(lambda: self.showLineups("Clove","Breeze","B"))
        self.ui.actionCloveFractureA.triggered.connect(lambda: self.showLineups("Clove","Fracture","A"))
        self.ui.actionCloveFractureMid.triggered.connect(lambda: self.showLineups("Clove","Fracture","Mid"))
        self.ui.actionCloveFractureB.triggered.connect(lambda: self.showLineups("Clove","Fracture","B"))
        self.ui.actionCloveHavenA.triggered.connect(lambda: self.showLineups("Clove","Haven","A"))
        self.ui.actionCloveHavenB.triggered.connect(lambda: self.showLineups("Clove","Haven","B"))
        self.ui.actionCloveHavenC.triggered.connect(lambda: self.showLineups("Clove","Haven","C"))
        self.ui.actionCloveIceboxA.triggered.connect(lambda: self.showLineups("Clove","Icebox","A"))
        self.ui.actionCloveIceboxMid.triggered.connect(lambda: self.showLineups("Clove","Icebox","Mid"))
        self.ui.actionCloveIceboxB.triggered.connect(lambda: self.showLineups("Clove","Icebox","B"))
        self.ui.actionCloveLotusA.triggered.connect(lambda: self.showLineups("Clove","Lotus","A"))
        self.ui.actionCloveLotusB.triggered.connect(lambda: self.showLineups("Clove","Lotus","B"))
        self.ui.actionCloveLotusC.triggered.connect(lambda: self.showLineups("Clove","Lotus","C"))
        self.ui.actionClovePearlA.triggered.connect(lambda: self.showLineups("Clove","Peral","A"))
        self.ui.actionClovePearlMid.triggered.connect(lambda: self.showLineups("Clove","Pearl","Mid"))
        self.ui.actionClovePearlB.triggered.connect(lambda: self.showLineups("Clove","Pearl","B"))
        self.ui.actionCloveSplitA.triggered.connect(lambda: self.showLineups("Clove","Split","A"))
        self.ui.actionCloveSplitMid.triggered.connect(lambda: self.showLineups("Clove","Split","Mid"))
        self.ui.actionCloveSplitB.triggered.connect(lambda: self.showLineups("Clove","Split","B"))
        self.ui.actionCloveSunsetA.triggered.connect(lambda: self.showLineups("Clove","Sunset","A"))
        self.ui.actionCloveSunsetMid.triggered.connect(lambda: self.showLineups("Clove","Sunset","Mid"))
        self.ui.actionCloveSunsetB.triggered.connect(lambda: self.showLineups("Clove","Sunset","B"))

        # Cypher menüben x gomb lenyomásakor
        self.ui.actionCypherAbyssA.triggered.connect(lambda: self.showLineups("Cypher","Abyss","A"))
        self.ui.actionCypherAbyssMid.triggered.connect(lambda: self.showLineups("Cypher","Abyss","Mid"))
        self.ui.actionCypherAbyssB.triggered.connect(lambda: self.showLineups("Cypher","Abyss","B"))
        self.ui.actionCypherAscentA.triggered.connect(lambda: self.showLineups("Cypher","Ascent","A"))
        self.ui.actionCypherAscentMid.triggered.connect(lambda: self.showLineups("Cypher","Ascent","Mid"))
        self.ui.actionCypherAscentB.triggered.connect(lambda: self.showLineups("Cypher","Ascent","B"))
        self.ui.actionCypherBindA.triggered.connect(lambda: self.showLineups("Cypher","Bind", "A"))
        self.ui.actionCypherBindB.triggered.connect(lambda: self.showLineups("Cypher","Bind", "B"))
        self.ui.actionCypherBreezeA.triggered.connect(lambda: self.showLineups("Cypher","Breeze","A"))
        self.ui.actionCypherBreezeMid.triggered.connect(lambda: self.showLineups("Cypher","Breeze","Mid"))
        self.ui.actionCypherBreezeA.triggered.connect(lambda: self.showLineups("Cypher","Breeze","B"))
        self.ui.actionCypherFractureA.triggered.connect(lambda: self.showLineups("Cypher","Fracture","A"))
        self.ui.actionCypherFractureMid.triggered.connect(lambda: self.showLineups("Cypher","Fracture","Mid"))
        self.ui.actionCypherFractureB.triggered.connect(lambda: self.showLineups("Cypher","Fracture","B"))
        self.ui.actionCypherHavenA.triggered.connect(lambda: self.showLineups("Cypher","Haven","A"))
        self.ui.actionCypherHavenB.triggered.connect(lambda: self.showLineups("Cypher","Haven","B"))
        self.ui.actionCypherHavenC.triggered.connect(lambda: self.showLineups("Cypher","Haven","C"))
        self.ui.actionCypherIceboxA.triggered.connect(lambda: self.showLineups("Cypher","Icebox","A"))
        self.ui.actionCypherIceboxMid.triggered.connect(lambda: self.showLineups("Cypher","Icebox","Mid"))
        self.ui.actionCypherIceboxB.triggered.connect(lambda: self.showLineups("Cypher","Icebox","B"))
        self.ui.actionCypherLotusA.triggered.connect(lambda: self.showLineups("Cypher","Lotus","A"))
        self.ui.actionCypherLotusB.triggered.connect(lambda: self.showLineups("Cypher","Lotus","B"))
        self.ui.actionCypherLotusC.triggered.connect(lambda: self.showLineups("Cypher","Lotus","C"))
        self.ui.actionCypherPearlA.triggered.connect(lambda: self.showLineups("Cypher","Peral","A"))
        self.ui.actionCypherPearlMid.triggered.connect(lambda: self.showLineups("Cypher","Pearl","Mid"))
        self.ui.actionCypherPearlB.triggered.connect(lambda: self.showLineups("Cypher","Pearl","B"))
        self.ui.actionCypherSplitA.triggered.connect(lambda: self.showLineups("Cypher","Split","A"))
        self.ui.actionCypherSplitMid.triggered.connect(lambda: self.showLineups("Cypher","Split","Mid"))
        self.ui.actionCypherSplitB.triggered.connect(lambda: self.showLineups("Cypher","Split","B"))
        self.ui.actionCypherSunsetA.triggered.connect(lambda: self.showLineups("Cypher","Sunset","A"))
        self.ui.actionCypherSunsetMid.triggered.connect(lambda: self.showLineups("Cypher","Sunset","Mid"))
        self.ui.actionCypherSunsetB.triggered.connect(lambda: self.showLineups("Cypher","Sunset","B"))

        # Deadlock menüben x gomb lenyomásakor
        self.ui.actionDeadlockAbyssA.triggered.connect(lambda: self.showLineups("Deadlock","Abyss","A"))
        self.ui.actionDeadlockAbyssMid.triggered.connect(lambda: self.showLineups("Deadlock","Abyss","Mid"))
        self.ui.actionDeadlockAbyssB.triggered.connect(lambda: self.showLineups("Deadlock","Abyss","B"))
        self.ui.actionDeadlockAscentA.triggered.connect(lambda: self.showLineups("Deadlock","Ascent","A"))
        self.ui.actionDeadlockAscentMid.triggered.connect(lambda: self.showLineups("Deadlock","Ascent","Mid"))
        self.ui.actionDeadlockAscentB.triggered.connect(lambda: self.showLineups("Deadlock","Ascent","B"))
        self.ui.actionDeadlockBindA.triggered.connect(lambda: self.showLineups("Deadlock","Bind", "A"))
        self.ui.actionDeadlockBindB.triggered.connect(lambda: self.showLineups("Deadlock","Bind", "B"))
        self.ui.actionDeadlockBreezeA.triggered.connect(lambda: self.showLineups("Deadlock","Breeze","A"))
        self.ui.actionDeadlockBreezeMid.triggered.connect(lambda: self.showLineups("Deadlock","Breeze","Mid"))
        self.ui.actionDeadlockBreezeA.triggered.connect(lambda: self.showLineups("Deadlock","Breeze","B"))
        self.ui.actionDeadlockFractureA.triggered.connect(lambda: self.showLineups("Deadlock","Fracture","A"))
        self.ui.actionDeadlockFractureMid.triggered.connect(lambda: self.showLineups("Deadlock","Fracture","Mid"))
        self.ui.actionDeadlockFractureB.triggered.connect(lambda: self.showLineups("Deadlock","Fracture","B"))
        self.ui.actionDeadlockHavenA.triggered.connect(lambda: self.showLineups("Deadlock","Haven","A"))
        self.ui.actionDeadlockHavenB.triggered.connect(lambda: self.showLineups("Deadlock","Haven","B"))
        self.ui.actionDeadlockHavenC.triggered.connect(lambda: self.showLineups("Deadlock","Haven","C"))
        self.ui.actionDeadlockIceboxA.triggered.connect(lambda: self.showLineups("Deadlock","Icebox","A"))
        self.ui.actionDeadlockIceboxMid.triggered.connect(lambda: self.showLineups("Deadlock","Icebox","Mid"))
        self.ui.actionDeadlockIceboxB.triggered.connect(lambda: self.showLineups("Deadlock","Icebox","B"))
        self.ui.actionDeadlockLotusA.triggered.connect(lambda: self.showLineups("Deadlock","Lotus","A"))
        self.ui.actionDeadlockLotusB.triggered.connect(lambda: self.showLineups("Deadlock","Lotus","B"))
        self.ui.actionDeadlockLotusC.triggered.connect(lambda: self.showLineups("Deadlock","Lotus","C"))
        self.ui.actionDeadlockPearlA.triggered.connect(lambda: self.showLineups("Deadlock","Peral","A"))
        self.ui.actionDeadlockPearlMid.triggered.connect(lambda: self.showLineups("Deadlock","Pearl","Mid"))
        self.ui.actionDeadlockPearlB.triggered.connect(lambda: self.showLineups("Deadlock","Pearl","B"))
        self.ui.actionDeadlockSplitA.triggered.connect(lambda: self.showLineups("Deadlock","Split","A"))
        self.ui.actionDeadlockSplitMid.triggered.connect(lambda: self.showLineups("Deadlock","Split","Mid"))
        self.ui.actionDeadlockSplitB.triggered.connect(lambda: self.showLineups("Deadlock","Split","B"))
        self.ui.actionDeadlockSunsetA.triggered.connect(lambda: self.showLineups("Deadlock","Sunset","A"))
        self.ui.actionDeadlockSunsetMid.triggered.connect(lambda: self.showLineups("Deadlock","Sunset","Mid"))
        self.ui.actionDeadlockSunsetB.triggered.connect(lambda: self.showLineups("Deadlock","Sunset","B"))

        # Fade menüben x gomb lenyomásakor
        self.ui.actionFadeAbyssA.triggered.connect(lambda: self.showLineups("Fade","Abyss","A"))
        self.ui.actionFadeAbyssMid.triggered.connect(lambda: self.showLineups("Fade","Abyss","Mid"))
        self.ui.actionFadeAbyssB.triggered.connect(lambda: self.showLineups("Fade","Abyss","B"))
        self.ui.actionFadeAscentA.triggered.connect(lambda: self.showLineups("Fade","Ascent","A"))
        self.ui.actionFadeAscentMid.triggered.connect(lambda: self.showLineups("Fade","Ascent","Mid"))
        self.ui.actionFadeAscentB.triggered.connect(lambda: self.showLineups("Fade","Ascent","B"))
        self.ui.actionFadeBindA.triggered.connect(lambda: self.showLineups("Fade","Bind", "A"))
        self.ui.actionFadeBindB.triggered.connect(lambda: self.showLineups("Fade","Bind", "B"))
        self.ui.actionFadeBreezeA.triggered.connect(lambda: self.showLineups("Fade","Breeze","A"))
        self.ui.actionFadeBreezeMid.triggered.connect(lambda: self.showLineups("Fade","Breeze","Mid"))
        self.ui.actionFadeBreezeA.triggered.connect(lambda: self.showLineups("Fade","Breeze","B"))
        self.ui.actionFadeFractureA.triggered.connect(lambda: self.showLineups("Fade","Fracture","A"))
        self.ui.actionFadeFractureMid.triggered.connect(lambda: self.showLineups("Fade","Fracture","Mid"))
        self.ui.actionFadeFractureB.triggered.connect(lambda: self.showLineups("Fade","Fracture","B"))
        self.ui.actionFadeHavenA.triggered.connect(lambda: self.showLineups("Fade","Haven","A"))
        self.ui.actionFadeHavenB.triggered.connect(lambda: self.showLineups("Fade","Haven","B"))
        self.ui.actionFadeHavenC.triggered.connect(lambda: self.showLineups("Fade","Haven","C"))
        self.ui.actionFadeIceboxA.triggered.connect(lambda: self.showLineups("Fade","Icebox","A"))
        self.ui.actionFadeIceboxMid.triggered.connect(lambda: self.showLineups("Fade","Icebox","Mid"))
        self.ui.actionFadeIceboxB.triggered.connect(lambda: self.showLineups("Fade","Icebox","B"))
        self.ui.actionFadeLotusA.triggered.connect(lambda: self.showLineups("Fade","Lotus","A"))
        self.ui.actionFadeLotusB.triggered.connect(lambda: self.showLineups("Fade","Lotus","B"))
        self.ui.actionFadeLotusC.triggered.connect(lambda: self.showLineups("Fade","Lotus","C"))
        self.ui.actionFadePearlA.triggered.connect(lambda: self.showLineups("Fade","Peral","A"))
        self.ui.actionFadePearlMid.triggered.connect(lambda: self.showLineups("Fade","Pearl","Mid"))
        self.ui.actionFadePearlB.triggered.connect(lambda: self.showLineups("Fade","Pearl","B"))
        self.ui.actionFadeSplitA.triggered.connect(lambda: self.showLineups("Fade","Split","A"))
        self.ui.actionFadeSplitMid.triggered.connect(lambda: self.showLineups("Fade","Split","Mid"))
        self.ui.actionFadeSplitB.triggered.connect(lambda: self.showLineups("Fade","Split","B"))
        self.ui.actionFadeSunsetA.triggered.connect(lambda: self.showLineups("Fade","Sunset","A"))
        self.ui.actionFadeSunsetMid.triggered.connect(lambda: self.showLineups("Fade","Sunset","Mid"))
        self.ui.actionFadeSunsetB.triggered.connect(lambda: self.showLineups("Fade","Sunset","B"))

        # Gekko menüben x gomb lenyomásakor
        self.ui.actionGekkoAbyssA.triggered.connect(lambda: self.showLineups("Gekko","Abyss","A"))
        self.ui.actionGekkoAbyssMid.triggered.connect(lambda: self.showLineups("Gekko","Abyss","Mid"))
        self.ui.actionGekkoAbyssB.triggered.connect(lambda: self.showLineups("Gekko","Abyss","B"))
        self.ui.actionGekkoAscentA.triggered.connect(lambda: self.showLineups("Gekko","Ascent","A"))
        self.ui.actionGekkoAscentMid.triggered.connect(lambda: self.showLineups("Gekko","Ascent","Mid"))
        self.ui.actionGekkoAscentB.triggered.connect(lambda: self.showLineups("Gekko","Ascent","B"))
        self.ui.actionGekkoBindA.triggered.connect(lambda: self.showLineups("Gekko","Bind", "A"))
        self.ui.actionGekkoBindB.triggered.connect(lambda: self.showLineups("Gekko","Bind", "B"))
        self.ui.actionGekkoBreezeA.triggered.connect(lambda: self.showLineups("Gekko","Breeze","A"))
        self.ui.actionGekkoBreezeMid.triggered.connect(lambda: self.showLineups("Gekko","Breeze","Mid"))
        self.ui.actionGekkoBreezeA.triggered.connect(lambda: self.showLineups("Gekko","Breeze","B"))
        self.ui.actionGekkoFractureA.triggered.connect(lambda: self.showLineups("Gekko","Fracture","A"))
        self.ui.actionGekkoFractureMid.triggered.connect(lambda: self.showLineups("Gekko","Fracture","Mid"))
        self.ui.actionGekkoFractureB.triggered.connect(lambda: self.showLineups("Gekko","Fracture","B"))
        self.ui.actionGekkoHavenA.triggered.connect(lambda: self.showLineups("Gekko","Haven","A"))
        self.ui.actionGekkoHavenB.triggered.connect(lambda: self.showLineups("Gekko","Haven","B"))
        self.ui.actionGekkoHavenC.triggered.connect(lambda: self.showLineups("Gekko","Haven","C"))
        self.ui.actionGekkoIceboxA.triggered.connect(lambda: self.showLineups("Gekko","Icebox","A"))
        self.ui.actionGekkoIceboxMid.triggered.connect(lambda: self.showLineups("Gekko","Icebox","Mid"))
        self.ui.actionGekkoIceboxB.triggered.connect(lambda: self.showLineups("Gekko","Icebox","B"))
        self.ui.actionGekkoLotusA.triggered.connect(lambda: self.showLineups("Gekko","Lotus","A"))
        self.ui.actionGekkoLotusB.triggered.connect(lambda: self.showLineups("Gekko","Lotus","B"))
        self.ui.actionGekkoLotusC.triggered.connect(lambda: self.showLineups("Gekko","Lotus","C"))
        self.ui.actionGekkoPearlA.triggered.connect(lambda: self.showLineups("Gekko","Peral","A"))
        self.ui.actionGekkoPearlMid.triggered.connect(lambda: self.showLineups("Gekko","Pearl","Mid"))
        self.ui.actionGekkoPearlB.triggered.connect(lambda: self.showLineups("Gekko","Pearl","B"))
        self.ui.actionGekkoSplitA.triggered.connect(lambda: self.showLineups("Gekko","Split","A"))
        self.ui.actionGekkoSplitMid.triggered.connect(lambda: self.showLineups("Gekko","Split","Mid"))
        self.ui.actionGekkoSplitB.triggered.connect(lambda: self.showLineups("Gekko","Split","B"))
        self.ui.actionGekkoSunsetA.triggered.connect(lambda: self.showLineups("Gekko","Sunset","A"))
        self.ui.actionGekkoSunsetMid.triggered.connect(lambda: self.showLineups("Gekko","Sunset","Mid"))
        self.ui.actionGekkoSunsetB.triggered.connect(lambda: self.showLineups("Gekko","Sunset","B"))

        # Harbor menüben x gomb lenyomásakor
        self.ui.actionHarborAbyssA.triggered.connect(lambda: self.showLineups("Harbor","Abyss","A"))
        self.ui.actionHarborAbyssMid.triggered.connect(lambda: self.showLineups("Harbor","Abyss","Mid"))
        self.ui.actionHarborAbyssB.triggered.connect(lambda: self.showLineups("Harbor","Abyss","B"))
        self.ui.actionHarborAscentA.triggered.connect(lambda: self.showLineups("Harbor","Ascent","A"))
        self.ui.actionHarborAscentMid.triggered.connect(lambda: self.showLineups("Harbor","Ascent","Mid"))
        self.ui.actionHarborAscentB.triggered.connect(lambda: self.showLineups("Harbor","Ascent","B"))
        self.ui.actionHarborBindA.triggered.connect(lambda: self.showLineups("Harbor","Bind", "A"))
        self.ui.actionHarborBindB.triggered.connect(lambda: self.showLineups("Harbor","Bind", "B"))
        self.ui.actionHarborBreezeA.triggered.connect(lambda: self.showLineups("Harbor","Breeze","A"))
        self.ui.actionHarborBreezeMid.triggered.connect(lambda: self.showLineups("Harbor","Breeze","Mid"))
        self.ui.actionHarborBreezeA.triggered.connect(lambda: self.showLineups("Harbor","Breeze","B"))
        self.ui.actionHarborFractureA.triggered.connect(lambda: self.showLineups("Harbor","Fracture","A"))
        self.ui.actionHarborFractureMid.triggered.connect(lambda: self.showLineups("Harbor","Fracture","Mid"))
        self.ui.actionHarborFractureB.triggered.connect(lambda: self.showLineups("Harbor","Fracture","B"))
        self.ui.actionHarborHavenA.triggered.connect(lambda: self.showLineups("Harbor","Haven","A"))
        self.ui.actionHarborHavenB.triggered.connect(lambda: self.showLineups("Harbor","Haven","B"))
        self.ui.actionHarborHavenC.triggered.connect(lambda: self.showLineups("Harbor","Haven","C"))
        self.ui.actionHarborIceboxA.triggered.connect(lambda: self.showLineups("Harbor","Icebox","A"))
        self.ui.actionHarborIceboxMid.triggered.connect(lambda: self.showLineups("Harbor","Icebox","Mid"))
        self.ui.actionHarborIceboxB.triggered.connect(lambda: self.showLineups("Harbor","Icebox","B"))
        self.ui.actionHarborLotusA.triggered.connect(lambda: self.showLineups("Harbor","Lotus","A"))
        self.ui.actionHarborLotusB.triggered.connect(lambda: self.showLineups("Harbor","Lotus","B"))
        self.ui.actionHarborLotusC.triggered.connect(lambda: self.showLineups("Harbor","Lotus","C"))
        self.ui.actionHarborPearlA.triggered.connect(lambda: self.showLineups("Harbor","Peral","A"))
        self.ui.actionHarborPearlMid.triggered.connect(lambda: self.showLineups("Harbor","Pearl","Mid"))
        self.ui.actionHarborPearlB.triggered.connect(lambda: self.showLineups("Harbor","Pearl","B"))
        self.ui.actionHarborSplitA.triggered.connect(lambda: self.showLineups("Harbor","Split","A"))
        self.ui.actionHarborSplitMid.triggered.connect(lambda: self.showLineups("Harbor","Split","Mid"))
        self.ui.actionHarborSplitB.triggered.connect(lambda: self.showLineups("Harbor","Split","B"))
        self.ui.actionHarborSunsetA.triggered.connect(lambda: self.showLineups("Harbor","Sunset","A"))
        self.ui.actionHarborSunsetMid.triggered.connect(lambda: self.showLineups("Harbor","Sunset","Mid"))
        self.ui.actionHarborSunsetB.triggered.connect(lambda: self.showLineups("Harbor","Sunset","B"))

        # Iso menüben x gomb lenyomásakor
        self.ui.actionIsoAbyssA.triggered.connect(lambda: self.showLineups("Iso","Abyss","A"))
        self.ui.actionIsoAbyssMid.triggered.connect(lambda: self.showLineups("Iso","Abyss","Mid"))
        self.ui.actionIsoAbyssB.triggered.connect(lambda: self.showLineups("Iso","Abyss","B"))
        self.ui.actionIsoAscentA.triggered.connect(lambda: self.showLineups("Iso","Ascent","A"))
        self.ui.actionIsoAscentMid.triggered.connect(lambda: self.showLineups("Iso","Ascent","Mid"))
        self.ui.actionIsoAscentB.triggered.connect(lambda: self.showLineups("Iso","Ascent","B"))
        self.ui.actionIsoBindA.triggered.connect(lambda: self.showLineups("Iso","Bind", "A"))
        self.ui.actionIsoBindB.triggered.connect(lambda: self.showLineups("Iso","Bind", "B"))
        self.ui.actionIsoBreezeA.triggered.connect(lambda: self.showLineups("Iso","Breeze","A"))
        self.ui.actionIsoBreezeMid.triggered.connect(lambda: self.showLineups("Iso","Breeze","Mid"))
        self.ui.actionIsoBreezeA.triggered.connect(lambda: self.showLineups("Iso","Breeze","B"))
        self.ui.actionIsoFractureA.triggered.connect(lambda: self.showLineups("Iso","Fracture","A"))
        self.ui.actionIsoFractureMid.triggered.connect(lambda: self.showLineups("Iso","Fracture","Mid"))
        self.ui.actionIsoFractureB.triggered.connect(lambda: self.showLineups("Iso","Fracture","B"))
        self.ui.actionIsoHavenA.triggered.connect(lambda: self.showLineups("Iso","Haven","A"))
        self.ui.actionIsoHavenB.triggered.connect(lambda: self.showLineups("Iso","Haven","B"))
        self.ui.actionIsoHavenC.triggered.connect(lambda: self.showLineups("Iso","Haven","C"))
        self.ui.actionIsoIceboxA.triggered.connect(lambda: self.showLineups("Iso","Icebox","A"))
        self.ui.actionIsoIceboxMid.triggered.connect(lambda: self.showLineups("Iso","Icebox","Mid"))
        self.ui.actionIsoIceboxB.triggered.connect(lambda: self.showLineups("Iso","Icebox","B"))
        self.ui.actionIsoLotusA.triggered.connect(lambda: self.showLineups("Iso","Lotus","A"))
        self.ui.actionIsoLotusB.triggered.connect(lambda: self.showLineups("Iso","Lotus","B"))
        self.ui.actionIsoLotusC.triggered.connect(lambda: self.showLineups("Iso","Lotus","C"))
        self.ui.actionIsoPearlA.triggered.connect(lambda: self.showLineups("Iso","Peral","A"))
        self.ui.actionIsoPearlMid.triggered.connect(lambda: self.showLineups("Iso","Pearl","Mid"))
        self.ui.actionIsoPearlB.triggered.connect(lambda: self.showLineups("Iso","Pearl","B"))
        self.ui.actionIsoSplitA.triggered.connect(lambda: self.showLineups("Iso","Split","A"))
        self.ui.actionIsoSplitMid.triggered.connect(lambda: self.showLineups("Iso","Split","Mid"))
        self.ui.actionIsoSplitB.triggered.connect(lambda: self.showLineups("Iso","Split","B"))
        self.ui.actionIsoSunsetA.triggered.connect(lambda: self.showLineups("Iso","Sunset","A"))
        self.ui.actionIsoSunsetMid.triggered.connect(lambda: self.showLineups("Iso","Sunset","Mid"))
        self.ui.actionIsoSunsetB.triggered.connect(lambda: self.showLineups("Iso","Sunset","B"))

        # Jett menüben x gomb lenyomásakor
        self.ui.actionJettAbyssA.triggered.connect(lambda: self.showLineups("Jett","Abyss","A"))
        self.ui.actionJettAbyssMid.triggered.connect(lambda: self.showLineups("Jett","Abyss","Mid"))
        self.ui.actionJettAbyssB.triggered.connect(lambda: self.showLineups("Jett","Abyss","B"))
        self.ui.actionJettAscentA.triggered.connect(lambda: self.showLineups("Jett","Ascent","A"))
        self.ui.actionJettAscentMid.triggered.connect(lambda: self.showLineups("Jett","Ascent","Mid"))
        self.ui.actionJettAscentB.triggered.connect(lambda: self.showLineups("Jett","Ascent","B"))
        self.ui.actionJettBindA.triggered.connect(lambda: self.showLineups("Jett","Bind", "A"))
        self.ui.actionJettBindB.triggered.connect(lambda: self.showLineups("Jett","Bind", "B"))
        self.ui.actionJettBreezeA.triggered.connect(lambda: self.showLineups("Jett","Breeze","A"))
        self.ui.actionJettBreezeMid.triggered.connect(lambda: self.showLineups("Jett","Breeze","Mid"))
        self.ui.actionJettBreezeA.triggered.connect(lambda: self.showLineups("Jett","Breeze","B"))
        self.ui.actionJettFractureA.triggered.connect(lambda: self.showLineups("Jett","Fracture","A"))
        self.ui.actionJettFractureMid.triggered.connect(lambda: self.showLineups("Jett","Fracture","Mid"))
        self.ui.actionJettFractureB.triggered.connect(lambda: self.showLineups("Jett","Fracture","B"))
        self.ui.actionJettHavenA.triggered.connect(lambda: self.showLineups("Jett","Haven","A"))
        self.ui.actionJettHavenB.triggered.connect(lambda: self.showLineups("Jett","Haven","B"))
        self.ui.actionJettHavenC.triggered.connect(lambda: self.showLineups("Jett","Haven","C"))
        self.ui.actionJettIceboxA.triggered.connect(lambda: self.showLineups("Jett","Icebox","A"))
        self.ui.actionJettIceboxMid.triggered.connect(lambda: self.showLineups("Jett","Icebox","Mid"))
        self.ui.actionJettIceboxB.triggered.connect(lambda: self.showLineups("Jett","Icebox","B"))
        self.ui.actionJettLotusA.triggered.connect(lambda: self.showLineups("Jett","Lotus","A"))
        self.ui.actionJettLotusB.triggered.connect(lambda: self.showLineups("Jett","Lotus","B"))
        self.ui.actionJettLotusC.triggered.connect(lambda: self.showLineups("Jett","Lotus","C"))
        self.ui.actionJettPearlA.triggered.connect(lambda: self.showLineups("Jett","Peral","A"))
        self.ui.actionJettPearlMid.triggered.connect(lambda: self.showLineups("Jett","Pearl","Mid"))
        self.ui.actionJettPearlB.triggered.connect(lambda: self.showLineups("Jett","Pearl","B"))
        self.ui.actionJettSplitA.triggered.connect(lambda: self.showLineups("Jett","Split","A"))
        self.ui.actionJettSplitMid.triggered.connect(lambda: self.showLineups("Jett","Split","Mid"))
        self.ui.actionJettSplitB.triggered.connect(lambda: self.showLineups("Jett","Split","B"))
        self.ui.actionJettSunsetA.triggered.connect(lambda: self.showLineups("Jett","Sunset","A"))
        self.ui.actionJettSunsetMid.triggered.connect(lambda: self.showLineups("Jett","Sunset","Mid"))
        self.ui.actionJettSunsetB.triggered.connect(lambda: self.showLineups("Jett","Sunset","B"))

        # Kayo menüben x gomb lenyomásakor
        self.ui.actionKayoAbyssA.triggered.connect(lambda: self.showLineups("Kayo","Abyss","A"))
        self.ui.actionKayoAbyssMid.triggered.connect(lambda: self.showLineups("Kayo","Abyss","Mid"))
        self.ui.actionKayoAbyssB.triggered.connect(lambda: self.showLineups("Kayo","Abyss","B"))
        self.ui.actionKayoAscentA.triggered.connect(lambda: self.showLineups("Kayo","Ascent","A"))
        self.ui.actionKayoAscentMid.triggered.connect(lambda: self.showLineups("Kayo","Ascent","Mid"))
        self.ui.actionKayoAscentB.triggered.connect(lambda: self.showLineups("Kayo","Ascent","B"))
        self.ui.actionKayoBindA.triggered.connect(lambda: self.showLineups("Kayo","Bind", "A"))
        self.ui.actionKayoBindB.triggered.connect(lambda: self.showLineups("Kayo","Bind", "B"))
        self.ui.actionKayoBreezeA.triggered.connect(lambda: self.showLineups("Kayo","Breeze","A"))
        self.ui.actionKayoBreezeMid.triggered.connect(lambda: self.showLineups("Kayo","Breeze","Mid"))
        self.ui.actionKayoBreezeA.triggered.connect(lambda: self.showLineups("Kayo","Breeze","B"))
        self.ui.actionKayoFractureA.triggered.connect(lambda: self.showLineups("Kayo","Fracture","A"))
        self.ui.actionKayoFractureMid.triggered.connect(lambda: self.showLineups("Kayo","Fracture","Mid"))
        self.ui.actionKayoFractureB.triggered.connect(lambda: self.showLineups("Kayo","Fracture","B"))
        self.ui.actionKayoHavenA.triggered.connect(lambda: self.showLineups("Kayo","Haven","A"))
        self.ui.actionKayoHavenB.triggered.connect(lambda: self.showLineups("Kayo","Haven","B"))
        self.ui.actionKayoHavenC.triggered.connect(lambda: self.showLineups("Kayo","Haven","C"))
        self.ui.actionKayoIceboxA.triggered.connect(lambda: self.showLineups("Kayo","Icebox","A"))
        self.ui.actionKayoIceboxMid.triggered.connect(lambda: self.showLineups("Kayo","Icebox","Mid"))
        self.ui.actionKayoIceboxB.triggered.connect(lambda: self.showLineups("Kayo","Icebox","B"))
        self.ui.actionKayoLotusA.triggered.connect(lambda: self.showLineups("Kayo","Lotus","A"))
        self.ui.actionKayoLotusB.triggered.connect(lambda: self.showLineups("Kayo","Lotus","B"))
        self.ui.actionKayoLotusC.triggered.connect(lambda: self.showLineups("Kayo","Lotus","C"))
        self.ui.actionKayoPearlA.triggered.connect(lambda: self.showLineups("Kayo","Peral","A"))
        self.ui.actionKayoPearlMid.triggered.connect(lambda: self.showLineups("Kayo","Pearl","Mid"))
        self.ui.actionKayoPearlB.triggered.connect(lambda: self.showLineups("Kayo","Pearl","B"))
        self.ui.actionKayoSplitA.triggered.connect(lambda: self.showLineups("Kayo","Split","A"))
        self.ui.actionKayoSplitMid.triggered.connect(lambda: self.showLineups("Kayo","Split","Mid"))
        self.ui.actionKayoSplitB.triggered.connect(lambda: self.showLineups("Kayo","Split","B"))
        self.ui.actionKayoSunsetA.triggered.connect(lambda: self.showLineups("Kayo","Sunset","A"))
        self.ui.actionKayoSunsetMid.triggered.connect(lambda: self.showLineups("Kayo","Sunset","Mid"))
        self.ui.actionKayoSunsetB.triggered.connect(lambda: self.showLineups("Kayo","Sunset","B"))

        # Killjoy menüben x gomb lenyomásakor
        self.ui.actionKilljoyAbyssA.triggered.connect(lambda: self.showLineups("Killjoy","Abyss","A"))
        self.ui.actionKilljoyAbyssMid.triggered.connect(lambda: self.showLineups("Killjoy","Abyss","Mid"))
        self.ui.actionKilljoyAbyssB.triggered.connect(lambda: self.showLineups("Killjoy","Abyss","B"))
        self.ui.actionKilljoyAscentA.triggered.connect(lambda: self.showLineups("Killjoy","Ascent","A"))
        self.ui.actionKilljoyAscentMid.triggered.connect(lambda: self.showLineups("Killjoy","Ascent","Mid"))
        self.ui.actionKilljoyAscentB.triggered.connect(lambda: self.showLineups("Killjoy","Ascent","B"))
        self.ui.actionKilljoyBindA.triggered.connect(lambda: self.showLineups("Killjoy","Bind", "A"))
        self.ui.actionKilljoyBindB.triggered.connect(lambda: self.showLineups("Killjoy","Bind", "B"))
        self.ui.actionKilljoyBreezeA.triggered.connect(lambda: self.showLineups("Killjoy","Breeze","A"))
        self.ui.actionKilljoyBreezeMid.triggered.connect(lambda: self.showLineups("Killjoy","Breeze","Mid"))
        self.ui.actionKilljoyBreezeA.triggered.connect(lambda: self.showLineups("Killjoy","Breeze","B"))
        self.ui.actionKilljoyFractureA.triggered.connect(lambda: self.showLineups("Killjoy","Fracture","A"))
        self.ui.actionKilljoyFractureMid.triggered.connect(lambda: self.showLineups("Killjoy","Fracture","Mid"))
        self.ui.actionKilljoyFractureB.triggered.connect(lambda: self.showLineups("Killjoy","Fracture","B"))
        self.ui.actionKilljoyHavenA.triggered.connect(lambda: self.showLineups("Killjoy","Haven","A"))
        self.ui.actionKilljoyHavenB.triggered.connect(lambda: self.showLineups("Killjoy","Haven","B"))
        self.ui.actionKilljoyHavenC.triggered.connect(lambda: self.showLineups("Killjoy","Haven","C"))
        self.ui.actionKilljoyIceboxA.triggered.connect(lambda: self.showLineups("Killjoy","Icebox","A"))
        self.ui.actionKilljoyIceboxMid.triggered.connect(lambda: self.showLineups("Killjoy","Icebox","Mid"))
        self.ui.actionKilljoyIceboxB.triggered.connect(lambda: self.showLineups("Killjoy","Icebox","B"))
        self.ui.actionKilljoyLotusA.triggered.connect(lambda: self.showLineups("Killjoy","Lotus","A"))
        self.ui.actionKilljoyLotusB.triggered.connect(lambda: self.showLineups("Killjoy","Lotus","B"))
        self.ui.actionKilljoyLotusC.triggered.connect(lambda: self.showLineups("Killjoy","Lotus","C"))
        self.ui.actionKilljoyPearlA.triggered.connect(lambda: self.showLineups("Killjoy","Peral","A"))
        self.ui.actionKilljoyPearlMid.triggered.connect(lambda: self.showLineups("Killjoy","Pearl","Mid"))
        self.ui.actionKilljoyPearlB.triggered.connect(lambda: self.showLineups("Killjoy","Pearl","B"))
        self.ui.actionKilljoySplitA.triggered.connect(lambda: self.showLineups("Killjoy","Split","A"))
        self.ui.actionKilljoySplitMid.triggered.connect(lambda: self.showLineups("Killjoy","Split","Mid"))
        self.ui.actionKilljoySplitB.triggered.connect(lambda: self.showLineups("Killjoy","Split","B"))
        self.ui.actionKilljoySunsetA.triggered.connect(lambda: self.showLineups("Killjoy","Sunset","A"))
        self.ui.actionKilljoySunsetMid.triggered.connect(lambda: self.showLineups("Killjoy","Sunset","Mid"))
        self.ui.actionKilljoySunsetB.triggered.connect(lambda: self.showLineups("Killjoy","Sunset","B"))

        # Neon menüben x gomb lenyomásakor
        self.ui.actionNeonAbyssA.triggered.connect(lambda: self.showLineups("Neon","Abyss","A"))
        self.ui.actionNeonAbyssMid.triggered.connect(lambda: self.showLineups("Neon","Abyss","Mid"))
        self.ui.actionNeonAbyssB.triggered.connect(lambda: self.showLineups("Neon","Abyss","B"))
        self.ui.actionNeonAscentA.triggered.connect(lambda: self.showLineups("Neon","Ascent","A"))
        self.ui.actionNeonAscentMid.triggered.connect(lambda: self.showLineups("Neon","Ascent","Mid"))
        self.ui.actionNeonAscentB.triggered.connect(lambda: self.showLineups("Neon","Ascent","B"))
        self.ui.actionNeonBindA.triggered.connect(lambda: self.showLineups("Neon","Bind", "A"))
        self.ui.actionNeonBindB.triggered.connect(lambda: self.showLineups("Neon","Bind", "B"))
        self.ui.actionNeonBreezeA.triggered.connect(lambda: self.showLineups("Neon","Breeze","A"))
        self.ui.actionNeonBreezeMid.triggered.connect(lambda: self.showLineups("Neon","Breeze","Mid"))
        self.ui.actionNeonBreezeA.triggered.connect(lambda: self.showLineups("Neon","Breeze","B"))
        self.ui.actionNeonFractureA.triggered.connect(lambda: self.showLineups("Neon","Fracture","A"))
        self.ui.actionNeonFractureMid.triggered.connect(lambda: self.showLineups("Neon","Fracture","Mid"))
        self.ui.actionNeonFractureB.triggered.connect(lambda: self.showLineups("Neon","Fracture","B"))
        self.ui.actionNeonHavenA.triggered.connect(lambda: self.showLineups("Neon","Haven","A"))
        self.ui.actionNeonHavenB.triggered.connect(lambda: self.showLineups("Neon","Haven","B"))
        self.ui.actionNeonHavenC.triggered.connect(lambda: self.showLineups("Neon","Haven","C"))
        self.ui.actionNeonIceboxA.triggered.connect(lambda: self.showLineups("Neon","Icebox","A"))
        self.ui.actionNeonIceboxMid.triggered.connect(lambda: self.showLineups("Neon","Icebox","Mid"))
        self.ui.actionNeonIceboxB.triggered.connect(lambda: self.showLineups("Neon","Icebox","B"))
        self.ui.actionNeonLotusA.triggered.connect(lambda: self.showLineups("Neon","Lotus","A"))
        self.ui.actionNeonLotusB.triggered.connect(lambda: self.showLineups("Neon","Lotus","B"))
        self.ui.actionNeonLotusC.triggered.connect(lambda: self.showLineups("Neon","Lotus","C"))
        self.ui.actionNeonPearlA.triggered.connect(lambda: self.showLineups("Neon","Peral","A"))
        self.ui.actionNeonPearlMid.triggered.connect(lambda: self.showLineups("Neon","Pearl","Mid"))
        self.ui.actionNeonPearlB.triggered.connect(lambda: self.showLineups("Neon","Pearl","B"))
        self.ui.actionNeonSplitA.triggered.connect(lambda: self.showLineups("Neon","Split","A"))
        self.ui.actionNeonSplitMid.triggered.connect(lambda: self.showLineups("Neon","Split","Mid"))
        self.ui.actionNeonSplitB.triggered.connect(lambda: self.showLineups("Neon","Split","B"))
        self.ui.actionNeonSunsetA.triggered.connect(lambda: self.showLineups("Neon","Sunset","A"))
        self.ui.actionNeonSunsetMid.triggered.connect(lambda: self.showLineups("Neon","Sunset","Mid"))
        self.ui.actionNeonSunsetB.triggered.connect(lambda: self.showLineups("Neon","Sunset","B"))

        # Omen menüben x gomb lenyomásakor
        self.ui.actionOmenAbyssA.triggered.connect(lambda: self.showLineups("Omen","Abyss","A"))
        self.ui.actionOmenAbyssMid.triggered.connect(lambda: self.showLineups("Omen","Abyss","Mid"))
        self.ui.actionOmenAbyssB.triggered.connect(lambda: self.showLineups("Omen","Abyss","B"))
        self.ui.actionOmenAscentA.triggered.connect(lambda: self.showLineups("Omen","Ascent","A"))
        self.ui.actionOmenAscentMid.triggered.connect(lambda: self.showLineups("Omen","Ascent","Mid"))
        self.ui.actionOmenAscentB.triggered.connect(lambda: self.showLineups("Omen","Ascent","B"))
        self.ui.actionOmenBindA.triggered.connect(lambda: self.showLineups("Omen","Bind", "A"))
        self.ui.actionOmenBindB.triggered.connect(lambda: self.showLineups("Omen","Bind", "B"))
        self.ui.actionOmenBreezeA.triggered.connect(lambda: self.showLineups("Omen","Breeze","A"))
        self.ui.actionOmenBreezeMid.triggered.connect(lambda: self.showLineups("Omen","Breeze","Mid"))
        self.ui.actionOmenBreezeA.triggered.connect(lambda: self.showLineups("Omen","Breeze","B"))
        self.ui.actionOmenFractureA.triggered.connect(lambda: self.showLineups("Omen","Fracture","A"))
        self.ui.actionOmenFractureMid.triggered.connect(lambda: self.showLineups("Omen","Fracture","Mid"))
        self.ui.actionOmenFractureB.triggered.connect(lambda: self.showLineups("Omen","Fracture","B"))
        self.ui.actionOmenHavenA.triggered.connect(lambda: self.showLineups("Omen","Haven","A"))
        self.ui.actionOmenHavenB.triggered.connect(lambda: self.showLineups("Omen","Haven","B"))
        self.ui.actionOmenHavenC.triggered.connect(lambda: self.showLineups("Omen","Haven","C"))
        self.ui.actionOmenIceboxA.triggered.connect(lambda: self.showLineups("Omen","Icebox","A"))
        self.ui.actionOmenIceboxMid.triggered.connect(lambda: self.showLineups("Omen","Icebox","Mid"))
        self.ui.actionOmenIceboxB.triggered.connect(lambda: self.showLineups("Omen","Icebox","B"))
        self.ui.actionOmenLotusA.triggered.connect(lambda: self.showLineups("Omen","Lotus","A"))
        self.ui.actionOmenLotusB.triggered.connect(lambda: self.showLineups("Omen","Lotus","B"))
        self.ui.actionOmenLotusC.triggered.connect(lambda: self.showLineups("Omen","Lotus","C"))
        self.ui.actionOmenPearlA.triggered.connect(lambda: self.showLineups("Omen","Peral","A"))
        self.ui.actionOmenPearlMid.triggered.connect(lambda: self.showLineups("Omen","Pearl","Mid"))
        self.ui.actionOmenPearlB.triggered.connect(lambda: self.showLineups("Omen","Pearl","B"))
        self.ui.actionOmenSplitA.triggered.connect(lambda: self.showLineups("Omen","Split","A"))
        self.ui.actionOmenSplitMid.triggered.connect(lambda: self.showLineups("Omen","Split","Mid"))
        self.ui.actionOmenSplitB.triggered.connect(lambda: self.showLineups("Omen","Split","B"))
        self.ui.actionOmenSunsetA.triggered.connect(lambda: self.showLineups("Omen","Sunset","A"))
        self.ui.actionOmenSunsetMid.triggered.connect(lambda: self.showLineups("Omen","Sunset","Mid"))
        self.ui.actionOmenSunsetB.triggered.connect(lambda: self.showLineups("Omen","Sunset","B"))

        # Phoenix menüben x gomb lenyomásakor
        self.ui.actionPhoenixAbyssA.triggered.connect(lambda: self.showLineups("Phoenix","Abyss","A"))
        self.ui.actionPhoenixAbyssMid.triggered.connect(lambda: self.showLineups("Phoenix","Abyss","Mid"))
        self.ui.actionPhoenixAbyssB.triggered.connect(lambda: self.showLineups("Phoenix","Abyss","B"))
        self.ui.actionPhoenixAscentA.triggered.connect(lambda: self.showLineups("Phoenix","Ascent","A"))
        self.ui.actionPhoenixAscentMid.triggered.connect(lambda: self.showLineups("Phoenix","Ascent","Mid"))
        self.ui.actionPhoenixAscentB.triggered.connect(lambda: self.showLineups("Phoenix","Ascent","B"))
        self.ui.actionPhoenixBindA.triggered.connect(lambda: self.showLineups("Phoenix","Bind", "A"))
        self.ui.actionPhoenixBindB.triggered.connect(lambda: self.showLineups("Phoenix","Bind", "B"))
        self.ui.actionPhoenixBreezeA.triggered.connect(lambda: self.showLineups("Phoenix","Breeze","A"))
        self.ui.actionPhoenixBreezeMid.triggered.connect(lambda: self.showLineups("Phoenix","Breeze","Mid"))
        self.ui.actionPhoenixBreezeA.triggered.connect(lambda: self.showLineups("Phoenix","Breeze","B"))
        self.ui.actionPhoenixFractureA.triggered.connect(lambda: self.showLineups("Phoenix","Fracture","A"))
        self.ui.actionPhoenixFractureMid.triggered.connect(lambda: self.showLineups("Phoenix","Fracture","Mid"))
        self.ui.actionPhoenixFractureB.triggered.connect(lambda: self.showLineups("Phoenix","Fracture","B"))
        self.ui.actionPhoenixHavenA.triggered.connect(lambda: self.showLineups("Phoenix","Haven","A"))
        self.ui.actionPhoenixHavenB.triggered.connect(lambda: self.showLineups("Phoenix","Haven","B"))
        self.ui.actionPhoenixHavenC.triggered.connect(lambda: self.showLineups("Phoenix","Haven","C"))
        self.ui.actionPhoenixIceboxA.triggered.connect(lambda: self.showLineups("Phoenix","Icebox","A"))
        self.ui.actionPhoenixIceboxMid.triggered.connect(lambda: self.showLineups("Phoenix","Icebox","Mid"))
        self.ui.actionPhoenixIceboxB.triggered.connect(lambda: self.showLineups("Phoenix","Icebox","B"))
        self.ui.actionPhoenixLotusA.triggered.connect(lambda: self.showLineups("Phoenix","Lotus","A"))
        self.ui.actionPhoenixLotusB.triggered.connect(lambda: self.showLineups("Phoenix","Lotus","B"))
        self.ui.actionPhoenixLotusC.triggered.connect(lambda: self.showLineups("Phoenix","Lotus","C"))
        self.ui.actionPhoenixPearlA.triggered.connect(lambda: self.showLineups("Phoenix","Peral","A"))
        self.ui.actionPhoenixPearlMid.triggered.connect(lambda: self.showLineups("Phoenix","Pearl","Mid"))
        self.ui.actionPhoenixPearlB.triggered.connect(lambda: self.showLineups("Phoenix","Pearl","B"))
        self.ui.actionPhoenixSplitA.triggered.connect(lambda: self.showLineups("Phoenix","Split","A"))
        self.ui.actionPhoenixSplitMid.triggered.connect(lambda: self.showLineups("Phoenix","Split","Mid"))
        self.ui.actionPhoenixSplitB.triggered.connect(lambda: self.showLineups("Phoenix","Split","B"))
        self.ui.actionPhoenixSunsetA.triggered.connect(lambda: self.showLineups("Phoenix","Sunset","A"))
        self.ui.actionPhoenixSunsetMid.triggered.connect(lambda: self.showLineups("Phoenix","Sunset","Mid"))
        self.ui.actionPhoenixSunsetB.triggered.connect(lambda: self.showLineups("Phoenix","Sunset","B"))

        # Raze menüben x gomb lenyomásakor
        self.ui.actionRazeAbyssA.triggered.connect(lambda: self.showLineups("Raze","Abyss","A"))
        self.ui.actionRazeAbyssMid.triggered.connect(lambda: self.showLineups("Raze","Abyss","Mid"))
        self.ui.actionRazeAbyssB.triggered.connect(lambda: self.showLineups("Raze","Abyss","B"))
        self.ui.actionRazeAscentA.triggered.connect(lambda: self.showLineups("Raze","Ascent","A"))
        self.ui.actionRazeAscentMid.triggered.connect(lambda: self.showLineups("Raze","Ascent","Mid"))
        self.ui.actionRazeAscentB.triggered.connect(lambda: self.showLineups("Raze","Ascent","B"))
        self.ui.actionRazeBindA.triggered.connect(lambda: self.showLineups("Raze","Bind", "A"))
        self.ui.actionRazeBindB.triggered.connect(lambda: self.showLineups("Raze","Bind", "B"))
        self.ui.actionRazeBreezeA.triggered.connect(lambda: self.showLineups("Raze","Breeze","A"))
        self.ui.actionRazeBreezeMid.triggered.connect(lambda: self.showLineups("Raze","Breeze","Mid"))
        self.ui.actionRazeBreezeA.triggered.connect(lambda: self.showLineups("Raze","Breeze","B"))
        self.ui.actionRazeFractureA.triggered.connect(lambda: self.showLineups("Raze","Fracture","A"))
        self.ui.actionRazeFractureMid.triggered.connect(lambda: self.showLineups("Raze","Fracture","Mid"))
        self.ui.actionRazeFractureB.triggered.connect(lambda: self.showLineups("Raze","Fracture","B"))
        self.ui.actionRazeHavenA.triggered.connect(lambda: self.showLineups("Raze","Haven","A"))
        self.ui.actionRazeHavenB.triggered.connect(lambda: self.showLineups("Raze","Haven","B"))
        self.ui.actionRazeHavenC.triggered.connect(lambda: self.showLineups("Raze","Haven","C"))
        self.ui.actionRazeIceboxA.triggered.connect(lambda: self.showLineups("Raze","Icebox","A"))
        self.ui.actionRazeIceboxMid.triggered.connect(lambda: self.showLineups("Raze","Icebox","Mid"))
        self.ui.actionRazeIceboxB.triggered.connect(lambda: self.showLineups("Raze","Icebox","B"))
        self.ui.actionRazeLotusA.triggered.connect(lambda: self.showLineups("Raze","Lotus","A"))
        self.ui.actionRazeLotusB.triggered.connect(lambda: self.showLineups("Raze","Lotus","B"))
        self.ui.actionRazeLotusC.triggered.connect(lambda: self.showLineups("Raze","Lotus","C"))
        self.ui.actionRazePearlA.triggered.connect(lambda: self.showLineups("Raze","Peral","A"))
        self.ui.actionRazePearlMid.triggered.connect(lambda: self.showLineups("Raze","Pearl","Mid"))
        self.ui.actionRazePearlB.triggered.connect(lambda: self.showLineups("Raze","Pearl","B"))
        self.ui.actionRazeSplitA.triggered.connect(lambda: self.showLineups("Raze","Split","A"))
        self.ui.actionRazeSplitMid.triggered.connect(lambda: self.showLineups("Raze","Split","Mid"))
        self.ui.actionRazeSplitB.triggered.connect(lambda: self.showLineups("Raze","Split","B"))
        self.ui.actionRazeSunsetA.triggered.connect(lambda: self.showLineups("Raze","Sunset","A"))
        self.ui.actionRazeSunsetMid.triggered.connect(lambda: self.showLineups("Raze","Sunset","Mid"))
        self.ui.actionRazeSunsetB.triggered.connect(lambda: self.showLineups("Raze","Sunset","B"))

        # Reyna menüben x gomb lenyomásakor
        self.ui.actionReynaAbyssA.triggered.connect(lambda: self.showLineups("Reyna","Abyss","A"))
        self.ui.actionReynaAbyssMid.triggered.connect(lambda: self.showLineups("Reyna","Abyss","Mid"))
        self.ui.actionReynaAbyssB.triggered.connect(lambda: self.showLineups("Reyna","Abyss","B"))
        self.ui.actionReynaAscentA.triggered.connect(lambda: self.showLineups("Reyna","Ascent","A"))
        self.ui.actionReynaAscentMid.triggered.connect(lambda: self.showLineups("Reyna","Ascent","Mid"))
        self.ui.actionReynaAscentB.triggered.connect(lambda: self.showLineups("Reyna","Ascent","B"))
        self.ui.actionReynaBindA.triggered.connect(lambda: self.showLineups("Reyna","Bind", "A"))
        self.ui.actionReynaBindB.triggered.connect(lambda: self.showLineups("Reyna","Bind", "B"))
        self.ui.actionReynaBreezeA.triggered.connect(lambda: self.showLineups("Reyna","Breeze","A"))
        self.ui.actionReynaBreezeMid.triggered.connect(lambda: self.showLineups("Reyna","Breeze","Mid"))
        self.ui.actionReynaBreezeA.triggered.connect(lambda: self.showLineups("Reyna","Breeze","B"))
        self.ui.actionReynaFractureA.triggered.connect(lambda: self.showLineups("Reyna","Fracture","A"))
        self.ui.actionReynaFractureMid.triggered.connect(lambda: self.showLineups("Reyna","Fracture","Mid"))
        self.ui.actionReynaFractureB.triggered.connect(lambda: self.showLineups("Reyna","Fracture","B"))
        self.ui.actionReynaHavenA.triggered.connect(lambda: self.showLineups("Reyna","Haven","A"))
        self.ui.actionReynaHavenB.triggered.connect(lambda: self.showLineups("Reyna","Haven","B"))
        self.ui.actionReynaHavenC.triggered.connect(lambda: self.showLineups("Reyna","Haven","C"))
        self.ui.actionReynaIceboxA.triggered.connect(lambda: self.showLineups("Reyna","Icebox","A"))
        self.ui.actionReynaIceboxMid.triggered.connect(lambda: self.showLineups("Reyna","Icebox","Mid"))
        self.ui.actionReynaIceboxB.triggered.connect(lambda: self.showLineups("Reyna","Icebox","B"))
        self.ui.actionReynaLotusA.triggered.connect(lambda: self.showLineups("Reyna","Lotus","A"))
        self.ui.actionReynaLotusB.triggered.connect(lambda: self.showLineups("Reyna","Lotus","B"))
        self.ui.actionReynaLotusC.triggered.connect(lambda: self.showLineups("Reyna","Lotus","C"))
        self.ui.actionReynaPearlA.triggered.connect(lambda: self.showLineups("Reyna","Peral","A"))
        self.ui.actionReynaPearlMid.triggered.connect(lambda: self.showLineups("Reyna","Pearl","Mid"))
        self.ui.actionReynaPearlB.triggered.connect(lambda: self.showLineups("Reyna","Pearl","B"))
        self.ui.actionReynaSplitA.triggered.connect(lambda: self.showLineups("Reyna","Split","A"))
        self.ui.actionReynaSplitMid.triggered.connect(lambda: self.showLineups("Reyna","Split","Mid"))
        self.ui.actionReynaSplitB.triggered.connect(lambda: self.showLineups("Reyna","Split","B"))
        self.ui.actionReynaSunsetA.triggered.connect(lambda: self.showLineups("Reyna","Sunset","A"))
        self.ui.actionReynaSunsetMid.triggered.connect(lambda: self.showLineups("Reyna","Sunset","Mid"))
        self.ui.actionReynaSunsetB.triggered.connect(lambda: self.showLineups("Reyna","Sunset","B"))

        # Sage menüben x gomb lenyomásakor
        self.ui.actionSageAbyssA.triggered.connect(lambda: self.showLineups("Sage","Abyss","A"))
        self.ui.actionSageAbyssMid.triggered.connect(lambda: self.showLineups("Sage","Abyss","Mid"))
        self.ui.actionSageAbyssB.triggered.connect(lambda: self.showLineups("Sage","Abyss","B"))
        self.ui.actionSageAscentA.triggered.connect(lambda: self.showLineups("Sage","Ascent","A"))
        self.ui.actionSageAscentMid.triggered.connect(lambda: self.showLineups("Sage","Ascent","Mid"))
        self.ui.actionSageAscentB.triggered.connect(lambda: self.showLineups("Sage","Ascent","B"))
        self.ui.actionSageBindA.triggered.connect(lambda: self.showLineups("Sage","Bind", "A"))
        self.ui.actionSageBindB.triggered.connect(lambda: self.showLineups("Sage","Bind", "B"))
        self.ui.actionSageBreezeA.triggered.connect(lambda: self.showLineups("Sage","Breeze","A"))
        self.ui.actionSageBreezeMid.triggered.connect(lambda: self.showLineups("Sage","Breeze","Mid"))
        self.ui.actionSageBreezeA.triggered.connect(lambda: self.showLineups("Sage","Breeze","B"))
        self.ui.actionSageFractureA.triggered.connect(lambda: self.showLineups("Sage","Fracture","A"))
        self.ui.actionSageFractureMid.triggered.connect(lambda: self.showLineups("Sage","Fracture","Mid"))
        self.ui.actionSageFractureB.triggered.connect(lambda: self.showLineups("Sage","Fracture","B"))
        self.ui.actionSageHavenA.triggered.connect(lambda: self.showLineups("Sage","Haven","A"))
        self.ui.actionSageHavenB.triggered.connect(lambda: self.showLineups("Sage","Haven","B"))
        self.ui.actionSageHavenC.triggered.connect(lambda: self.showLineups("Sage","Haven","C"))
        self.ui.actionSageIceboxA.triggered.connect(lambda: self.showLineups("Sage","Icebox","A"))
        self.ui.actionSageIceboxMid.triggered.connect(lambda: self.showLineups("Sage","Icebox","Mid"))
        self.ui.actionSageIceboxB.triggered.connect(lambda: self.showLineups("Sage","Icebox","B"))
        self.ui.actionSageLotusA.triggered.connect(lambda: self.showLineups("Sage","Lotus","A"))
        self.ui.actionSageLotusB.triggered.connect(lambda: self.showLineups("Sage","Lotus","B"))
        self.ui.actionSageLotusC.triggered.connect(lambda: self.showLineups("Sage","Lotus","C"))
        self.ui.actionSagePearlA.triggered.connect(lambda: self.showLineups("Sage","Peral","A"))
        self.ui.actionSagePearlMid.triggered.connect(lambda: self.showLineups("Sage","Pearl","Mid"))
        self.ui.actionSagePearlB.triggered.connect(lambda: self.showLineups("Sage","Pearl","B"))
        self.ui.actionSageSplitA.triggered.connect(lambda: self.showLineups("Sage","Split","A"))
        self.ui.actionSageSplitMid.triggered.connect(lambda: self.showLineups("Sage","Split","Mid"))
        self.ui.actionSageSplitB.triggered.connect(lambda: self.showLineups("Sage","Split","B"))
        self.ui.actionSageSunsetA.triggered.connect(lambda: self.showLineups("Sage","Sunset","A"))
        self.ui.actionSageSunsetMid.triggered.connect(lambda: self.showLineups("Sage","Sunset","Mid"))
        self.ui.actionSageSunsetB.triggered.connect(lambda: self.showLineups("Sage","Sunset","B"))

        # Skye menüben x gomb lenyomásakor
        self.ui.actionSkyeAbyssA.triggered.connect(lambda: self.showLineups("Skye","Abyss","A"))
        self.ui.actionSkyeAbyssMid.triggered.connect(lambda: self.showLineups("Skye","Abyss","Mid"))
        self.ui.actionSkyeAbyssB.triggered.connect(lambda: self.showLineups("Skye","Abyss","B"))
        self.ui.actionSkyeAscentA.triggered.connect(lambda: self.showLineups("Skye","Ascent","A"))
        self.ui.actionSkyeAscentMid.triggered.connect(lambda: self.showLineups("Skye","Ascent","Mid"))
        self.ui.actionSkyeAscentB.triggered.connect(lambda: self.showLineups("Skye","Ascent","B"))
        self.ui.actionSkyeBindA.triggered.connect(lambda: self.showLineups("Skye","Bind", "A"))
        self.ui.actionSkyeBindB.triggered.connect(lambda: self.showLineups("Skye","Bind", "B"))
        self.ui.actionSkyeBreezeA.triggered.connect(lambda: self.showLineups("Skye","Breeze","A"))
        self.ui.actionSkyeBreezeMid.triggered.connect(lambda: self.showLineups("Skye","Breeze","Mid"))
        self.ui.actionSkyeBreezeA.triggered.connect(lambda: self.showLineups("Skye","Breeze","B"))
        self.ui.actionSkyeFractureA.triggered.connect(lambda: self.showLineups("Skye","Fracture","A"))
        self.ui.actionSkyeFractureMid.triggered.connect(lambda: self.showLineups("Skye","Fracture","Mid"))
        self.ui.actionSkyeFractureB.triggered.connect(lambda: self.showLineups("Skye","Fracture","B"))
        self.ui.actionSkyeHavenA.triggered.connect(lambda: self.showLineups("Skye","Haven","A"))
        self.ui.actionSkyeHavenB.triggered.connect(lambda: self.showLineups("Skye","Haven","B"))
        self.ui.actionSkyeHavenC.triggered.connect(lambda: self.showLineups("Skye","Haven","C"))
        self.ui.actionSkyeIceboxA.triggered.connect(lambda: self.showLineups("Skye","Icebox","A"))
        self.ui.actionSkyeIceboxMid.triggered.connect(lambda: self.showLineups("Skye","Icebox","Mid"))
        self.ui.actionSkyeIceboxB.triggered.connect(lambda: self.showLineups("Skye","Icebox","B"))
        self.ui.actionSkyeLotusA.triggered.connect(lambda: self.showLineups("Skye","Lotus","A"))
        self.ui.actionSkyeLotusB.triggered.connect(lambda: self.showLineups("Skye","Lotus","B"))
        self.ui.actionSkyeLotusC.triggered.connect(lambda: self.showLineups("Skye","Lotus","C"))
        self.ui.actionSkyePearlA.triggered.connect(lambda: self.showLineups("Skye","Peral","A"))
        self.ui.actionSkyePearlMid.triggered.connect(lambda: self.showLineups("Skye","Pearl","Mid"))
        self.ui.actionSkyePearlB.triggered.connect(lambda: self.showLineups("Skye","Pearl","B"))
        self.ui.actionSkyeSplitA.triggered.connect(lambda: self.showLineups("Skye","Split","A"))
        self.ui.actionSkyeSplitMid.triggered.connect(lambda: self.showLineups("Skye","Split","Mid"))
        self.ui.actionSkyeSplitB.triggered.connect(lambda: self.showLineups("Skye","Split","B"))
        self.ui.actionSkyeSunsetA.triggered.connect(lambda: self.showLineups("Skye","Sunset","A"))
        self.ui.actionSkyeSunsetMid.triggered.connect(lambda: self.showLineups("Skye","Sunset","Mid"))
        self.ui.actionSkyeSunsetB.triggered.connect(lambda: self.showLineups("Skye","Sunset","B"))

        # Sova menüben x gomb lenyomásakor
        self.ui.actionSovaAbyssA.triggered.connect(lambda: self.showLineups("Sova","Abyss","A"))
        self.ui.actionSovaAbyssMid.triggered.connect(lambda: self.showLineups("Sova","Abyss","Mid"))
        self.ui.actionSovaAbyssB.triggered.connect(lambda: self.showLineups("Sova","Abyss","B"))
        self.ui.actionSovaAscentA.triggered.connect(lambda: self.showLineups("Sova","Ascent","A"))
        self.ui.actionSovaAscentMid.triggered.connect(lambda: self.showLineups("Sova","Ascent","Mid"))
        self.ui.actionSovaAscentB.triggered.connect(lambda: self.showLineups("Sova","Ascent","B"))
        self.ui.actionSovaBindA.triggered.connect(lambda: self.showLineups("Sova","Bind", "A"))
        self.ui.actionSovaBindB.triggered.connect(lambda: self.showLineups("Sova","Bind", "B"))
        self.ui.actionSovaBreezeA.triggered.connect(lambda: self.showLineups("Sova","Breeze","A"))
        self.ui.actionSovaBreezeMid.triggered.connect(lambda: self.showLineups("Sova","Breeze","Mid"))
        self.ui.actionSovaBreezeA.triggered.connect(lambda: self.showLineups("Sova","Breeze","B"))
        self.ui.actionSovaFractureA.triggered.connect(lambda: self.showLineups("Sova","Fracture","A"))
        self.ui.actionSovaFractureMid.triggered.connect(lambda: self.showLineups("Sova","Fracture","Mid"))
        self.ui.actionSovaFractureB.triggered.connect(lambda: self.showLineups("Sova","Fracture","B"))
        self.ui.actionSovaHavenA.triggered.connect(lambda: self.showLineups("Sova","Haven","A"))
        self.ui.actionSovaHavenB.triggered.connect(lambda: self.showLineups("Sova","Haven","B"))
        self.ui.actionSovaHavenC.triggered.connect(lambda: self.showLineups("Sova","Haven","C"))
        self.ui.actionSovaIceboxA.triggered.connect(lambda: self.showLineups("Sova","Icebox","A"))
        self.ui.actionSovaIceboxMid.triggered.connect(lambda: self.showLineups("Sova","Icebox","Mid"))
        self.ui.actionSovaIceboxB.triggered.connect(lambda: self.showLineups("Sova","Icebox","B"))
        self.ui.actionSovaLotusA.triggered.connect(lambda: self.showLineups("Sova","Lotus","A"))
        self.ui.actionSovaLotusB.triggered.connect(lambda: self.showLineups("Sova","Lotus","B"))
        self.ui.actionSovaLotusC.triggered.connect(lambda: self.showLineups("Sova","Lotus","C"))
        self.ui.actionSovaPearlA.triggered.connect(lambda: self.showLineups("Sova","Peral","A"))
        self.ui.actionSovaPearlMid.triggered.connect(lambda: self.showLineups("Sova","Pearl","Mid"))
        self.ui.actionSovaPearlB.triggered.connect(lambda: self.showLineups("Sova","Pearl","B"))
        self.ui.actionSovaSplitA.triggered.connect(lambda: self.showLineups("Sova","Split","A"))
        self.ui.actionSovaSplitMid.triggered.connect(lambda: self.showLineups("Sova","Split","Mid"))
        self.ui.actionSovaSplitB.triggered.connect(lambda: self.showLineups("Sova","Split","B"))
        self.ui.actionSovaSunsetA.triggered.connect(lambda: self.showLineups("Sova","Sunset","A"))
        self.ui.actionSovaSunsetMid.triggered.connect(lambda: self.showLineups("Sova","Sunset","Mid"))
        self.ui.actionSovaSunsetB.triggered.connect(lambda: self.showLineups("Sova","Sunset","B"))

        # Tejo menüben x gomb lenyomásakor
        self.ui.actionTejoAbyssA.triggered.connect(lambda: self.showLineups("Tejo","Abyss","A"))
        self.ui.actionTejoAbyssMid.triggered.connect(lambda: self.showLineups("Tejo","Abyss","Mid"))
        self.ui.actionTejoAbyssB.triggered.connect(lambda: self.showLineups("Tejo","Abyss","B"))
        self.ui.actionTejoAscentA.triggered.connect(lambda: self.showLineups("Tejo","Ascent","A"))
        self.ui.actionTejoAscentMid.triggered.connect(lambda: self.showLineups("Tejo","Ascent","Mid"))
        self.ui.actionTejoAscentB.triggered.connect(lambda: self.showLineups("Tejo","Ascent","B"))
        self.ui.actionTejoBindA.triggered.connect(lambda: self.showLineups("Tejo","Bind", "A"))
        self.ui.actionTejoBindB.triggered.connect(lambda: self.showLineups("Tejo","Bind", "B"))
        self.ui.actionTejoBreezeA.triggered.connect(lambda: self.showLineups("Tejo","Breeze","A"))
        self.ui.actionTejoBreezeMid.triggered.connect(lambda: self.showLineups("Tejo","Breeze","Mid"))
        self.ui.actionTejoBreezeA.triggered.connect(lambda: self.showLineups("Tejo","Breeze","B"))
        self.ui.actionTejoFractureA.triggered.connect(lambda: self.showLineups("Tejo","Fracture","A"))
        self.ui.actionTejoFractureMid.triggered.connect(lambda: self.showLineups("Tejo","Fracture","Mid"))
        self.ui.actionTejoFractureB.triggered.connect(lambda: self.showLineups("Tejo","Fracture","B"))
        self.ui.actionTejoHavenA.triggered.connect(lambda: self.showLineups("Tejo","Haven","A"))
        self.ui.actionTejoHavenB.triggered.connect(lambda: self.showLineups("Tejo","Haven","B"))
        self.ui.actionTejoHavenC.triggered.connect(lambda: self.showLineups("Tejo","Haven","C"))
        self.ui.actionTejoIceboxA.triggered.connect(lambda: self.showLineups("Tejo","Icebox","A"))
        self.ui.actionTejoIceboxMid.triggered.connect(lambda: self.showLineups("Tejo","Icebox","Mid"))
        self.ui.actionTejoIceboxB.triggered.connect(lambda: self.showLineups("Tejo","Icebox","B"))
        self.ui.actionTejoLotusA.triggered.connect(lambda: self.showLineups("Tejo","Lotus","A"))
        self.ui.actionTejoLotusB.triggered.connect(lambda: self.showLineups("Tejo","Lotus","B"))
        self.ui.actionTejoLotusC.triggered.connect(lambda: self.showLineups("Tejo","Lotus","C"))
        self.ui.actionTejoPearlA.triggered.connect(lambda: self.showLineups("Tejo","Peral","A"))
        self.ui.actionTejoPearlMid.triggered.connect(lambda: self.showLineups("Tejo","Pearl","Mid"))
        self.ui.actionTejoPearlB.triggered.connect(lambda: self.showLineups("Tejo","Pearl","B"))
        self.ui.actionTejoSplitA.triggered.connect(lambda: self.showLineups("Tejo","Split","A"))
        self.ui.actionTejoSplitMid.triggered.connect(lambda: self.showLineups("Tejo","Split","Mid"))
        self.ui.actionTejoSplitB.triggered.connect(lambda: self.showLineups("Tejo","Split","B"))
        self.ui.actionTejoSunsetA.triggered.connect(lambda: self.showLineups("Tejo","Sunset","A"))
        self.ui.actionTejoSunsetMid.triggered.connect(lambda: self.showLineups("Tejo","Sunset","Mid"))
        self.ui.actionTejoSunsetB.triggered.connect(lambda: self.showLineups("Tejo","Sunset","B"))

        # Viper menüben x gomb lenyomásakor
        self.ui.actionViperAbyssA.triggered.connect(lambda: self.showLineups("Viper","Abyss","A"))
        self.ui.actionViperAbyssMid.triggered.connect(lambda: self.showLineups("Viper","Abyss","Mid"))
        self.ui.actionViperAbyssB.triggered.connect(lambda: self.showLineups("Viper","Abyss","B"))
        self.ui.actionViperAscentA.triggered.connect(lambda: self.showLineups("Viper","Ascent","A"))
        self.ui.actionViperAscentMid.triggered.connect(lambda: self.showLineups("Viper","Ascent","Mid"))
        self.ui.actionViperAscentB.triggered.connect(lambda: self.showLineups("Viper","Ascent","B"))
        self.ui.actionViperBindA.triggered.connect(lambda: self.showLineups("Viper","Bind", "A"))
        self.ui.actionViperBindB.triggered.connect(lambda: self.showLineups("Viper","Bind", "B"))
        self.ui.actionViperBreezeA.triggered.connect(lambda: self.showLineups("Viper","Breeze","A"))
        self.ui.actionViperBreezeMid.triggered.connect(lambda: self.showLineups("Viper","Breeze","Mid"))
        self.ui.actionViperBreezeA.triggered.connect(lambda: self.showLineups("Viper","Breeze","B"))
        self.ui.actionViperFractureA.triggered.connect(lambda: self.showLineups("Viper","Fracture","A"))
        self.ui.actionViperFractureMid.triggered.connect(lambda: self.showLineups("Viper","Fracture","Mid"))
        self.ui.actionViperFractureB.triggered.connect(lambda: self.showLineups("Viper","Fracture","B"))
        self.ui.actionViperHavenA.triggered.connect(lambda: self.showLineups("Viper","Haven","A"))
        self.ui.actionViperHavenB.triggered.connect(lambda: self.showLineups("Viper","Haven","B"))
        self.ui.actionViperHavenC.triggered.connect(lambda: self.showLineups("Viper","Haven","C"))
        self.ui.actionViperIceboxA.triggered.connect(lambda: self.showLineups("Viper","Icebox","A"))
        self.ui.actionViperIceboxMid.triggered.connect(lambda: self.showLineups("Viper","Icebox","Mid"))
        self.ui.actionViperIceboxB.triggered.connect(lambda: self.showLineups("Viper","Icebox","B"))
        self.ui.actionViperLotusA.triggered.connect(lambda: self.showLineups("Viper","Lotus","A"))
        self.ui.actionViperLotusB.triggered.connect(lambda: self.showLineups("Viper","Lotus","B"))
        self.ui.actionViperLotusC.triggered.connect(lambda: self.showLineups("Viper","Lotus","C"))
        self.ui.actionViperPearlA.triggered.connect(lambda: self.showLineups("Viper","Peral","A"))
        self.ui.actionViperPearlMid.triggered.connect(lambda: self.showLineups("Viper","Pearl","Mid"))
        self.ui.actionViperPearlB.triggered.connect(lambda: self.showLineups("Viper","Pearl","B"))
        self.ui.actionViperSplitA.triggered.connect(lambda: self.showLineups("Viper","Split","A"))
        self.ui.actionViperSplitMid.triggered.connect(lambda: self.showLineups("Viper","Split","Mid"))
        self.ui.actionViperSplitB.triggered.connect(lambda: self.showLineups("Viper","Split","B"))
        self.ui.actionViperSunsetA.triggered.connect(lambda: self.showLineups("Viper","Sunset","A"))
        self.ui.actionViperSunsetMid.triggered.connect(lambda: self.showLineups("Viper","Sunset","Mid"))
        self.ui.actionViperSunsetB.triggered.connect(lambda: self.showLineups("Viper","Sunset","B"))

        # Vyse menüben x gomb lenyomásakor
        self.ui.actionVyseAbyssA.triggered.connect(lambda: self.showLineups("Vyse","Abyss","A"))
        self.ui.actionVyseAbyssMid.triggered.connect(lambda: self.showLineups("Vyse","Abyss","Mid"))
        self.ui.actionVyseAbyssB.triggered.connect(lambda: self.showLineups("Vyse","Abyss","B"))
        self.ui.actionVyseAscentA.triggered.connect(lambda: self.showLineups("Vyse","Ascent","A"))
        self.ui.actionVyseAscentMid.triggered.connect(lambda: self.showLineups("Vyse","Ascent","Mid"))
        self.ui.actionVyseAscentB.triggered.connect(lambda: self.showLineups("Vyse","Ascent","B"))
        self.ui.actionVyseBindA.triggered.connect(lambda: self.showLineups("Vyse","Bind", "A"))
        self.ui.actionVyseBindB.triggered.connect(lambda: self.showLineups("Vyse","Bind", "B"))
        self.ui.actionVyseBreezeA.triggered.connect(lambda: self.showLineups("Vyse","Breeze","A"))
        self.ui.actionVyseBreezeMid.triggered.connect(lambda: self.showLineups("Vyse","Breeze","Mid"))
        self.ui.actionVyseBreezeA.triggered.connect(lambda: self.showLineups("Vyse","Breeze","B"))
        self.ui.actionVyseFractureA.triggered.connect(lambda: self.showLineups("Vyse","Fracture","A"))
        self.ui.actionVyseFractureMid.triggered.connect(lambda: self.showLineups("Vyse","Fracture","Mid"))
        self.ui.actionVyseFractureB.triggered.connect(lambda: self.showLineups("Vyse","Fracture","B"))
        self.ui.actionVyseHavenA.triggered.connect(lambda: self.showLineups("Vyse","Haven","A"))
        self.ui.actionVyseHavenB.triggered.connect(lambda: self.showLineups("Vyse","Haven","B"))
        self.ui.actionVyseHavenC.triggered.connect(lambda: self.showLineups("Vyse","Haven","C"))
        self.ui.actionVyseIceboxA.triggered.connect(lambda: self.showLineups("Vyse","Icebox","A"))
        self.ui.actionVyseIceboxMid.triggered.connect(lambda: self.showLineups("Vyse","Icebox","Mid"))
        self.ui.actionVyseIceboxB.triggered.connect(lambda: self.showLineups("Vyse","Icebox","B"))
        self.ui.actionVyseLotusA.triggered.connect(lambda: self.showLineups("Vyse","Lotus","A"))
        self.ui.actionVyseLotusB.triggered.connect(lambda: self.showLineups("Vyse","Lotus","B"))
        self.ui.actionVyseLotusC.triggered.connect(lambda: self.showLineups("Vyse","Lotus","C"))
        self.ui.actionVysePearlA.triggered.connect(lambda: self.showLineups("Vyse","Peral","A"))
        self.ui.actionVysePearlMid.triggered.connect(lambda: self.showLineups("Vyse","Pearl","Mid"))
        self.ui.actionVysePearlB.triggered.connect(lambda: self.showLineups("Vyse","Pearl","B"))
        self.ui.actionVyseSplitA.triggered.connect(lambda: self.showLineups("Vyse","Split","A"))
        self.ui.actionVyseSplitMid.triggered.connect(lambda: self.showLineups("Vyse","Split","Mid"))
        self.ui.actionVyseSplitB.triggered.connect(lambda: self.showLineups("Vyse","Split","B"))
        self.ui.actionVyseSunsetA.triggered.connect(lambda: self.showLineups("Vyse","Sunset","A"))
        self.ui.actionVyseSunsetMid.triggered.connect(lambda: self.showLineups("Vyse","Sunset","Mid"))
        self.ui.actionVyseSunsetB.triggered.connect(lambda: self.showLineups("Vyse","Sunset","B"))

        # Yoru menüben x gomb lenyomásakor
        self.ui.actionYoruAbyssA.triggered.connect(lambda: self.showLineups("Yoru","Abyss","A"))
        self.ui.actionYoruAbyssMid.triggered.connect(lambda: self.showLineups("Yoru","Abyss","Mid"))
        self.ui.actionYoruAbyssB.triggered.connect(lambda: self.showLineups("Yoru","Abyss","B"))
        self.ui.actionYoruAscentA.triggered.connect(lambda: self.showLineups("Yoru","Ascent","A"))
        self.ui.actionYoruAscentMid.triggered.connect(lambda: self.showLineups("Yoru","Ascent","Mid"))
        self.ui.actionYoruAscentB.triggered.connect(lambda: self.showLineups("Yoru","Ascent","B"))
        self.ui.actionYoruBindA.triggered.connect(lambda: self.showLineups("Yoru","Bind", "A"))
        self.ui.actionYoruBindB.triggered.connect(lambda: self.showLineups("Yoru","Bind", "B"))
        self.ui.actionYoruBreezeA.triggered.connect(lambda: self.showLineups("Yoru","Breeze","A"))
        self.ui.actionYoruBreezeMid.triggered.connect(lambda: self.showLineups("Yoru","Breeze","Mid"))
        self.ui.actionYoruBreezeA.triggered.connect(lambda: self.showLineups("Yoru","Breeze","B"))
        self.ui.actionYoruFractureA.triggered.connect(lambda: self.showLineups("Yoru","Fracture","A"))
        self.ui.actionYoruFractureMid.triggered.connect(lambda: self.showLineups("Yoru","Fracture","Mid"))
        self.ui.actionYoruFractureB.triggered.connect(lambda: self.showLineups("Yoru","Fracture","B"))
        self.ui.actionYoruHavenA.triggered.connect(lambda: self.showLineups("Yoru","Haven","A"))
        self.ui.actionYoruHavenB.triggered.connect(lambda: self.showLineups("Yoru","Haven","B"))
        self.ui.actionYoruHavenC.triggered.connect(lambda: self.showLineups("Yoru","Haven","C"))
        self.ui.actionYoruIceboxA.triggered.connect(lambda: self.showLineups("Yoru","Icebox","A"))
        self.ui.actionYoruIceboxMid.triggered.connect(lambda: self.showLineups("Yoru","Icebox","Mid"))
        self.ui.actionYoruIceboxB.triggered.connect(lambda: self.showLineups("Yoru","Icebox","B"))
        self.ui.actionYoruLotusA.triggered.connect(lambda: self.showLineups("Yoru","Lotus","A"))
        self.ui.actionYoruLotusB.triggered.connect(lambda: self.showLineups("Yoru","Lotus","B"))
        self.ui.actionYoruLotusC.triggered.connect(lambda: self.showLineups("Yoru","Lotus","C"))
        self.ui.actionYoruPearlA.triggered.connect(lambda: self.showLineups("Yoru","Peral","A"))
        self.ui.actionYoruPearlMid.triggered.connect(lambda: self.showLineups("Yoru","Pearl","Mid"))
        self.ui.actionYoruPearlB.triggered.connect(lambda: self.showLineups("Yoru","Pearl","B"))
        self.ui.actionYoruSplitA.triggered.connect(lambda: self.showLineups("Yoru","Split","A"))
        self.ui.actionYoruSplitMid.triggered.connect(lambda: self.showLineups("Yoru","Split","Mid"))
        self.ui.actionYoruSplitB.triggered.connect(lambda: self.showLineups("Yoru","Split","B"))
        self.ui.actionYoruSunsetA.triggered.connect(lambda: self.showLineups("Yoru","Sunset","A"))
        self.ui.actionYoruSunsetMid.triggered.connect(lambda: self.showLineups("Yoru","Sunset","Mid"))
        self.ui.actionYoruSunsetB.triggered.connect(lambda: self.showLineups("Yoru","Sunset","B"))


        # Home menüben home gomb lenyomásakor 
        self.ui.actionHome.triggered.connect(lambda: self.returnHome())
        
        # Indításkor
        self.returnHome()









    # FÜGGVÉNYEK

    def showLineups(self, agent, map, site):

        # Scroll area reset
        self.scroll_area.show()
        self.scroll_widget = QWidget()
        self.scroll_layout = QVBoxLayout(self.scroll_widget)  
        self.scroll_area.setWidget(self.scroll_widget)
        self.scroll_area.setWidgetResizable(True)
        self.setCentralWidget(self.scroll_area)
        
        # Előző oldalak eltűntetése
        self.logo_label.hide()

        path = "Valorant-Companion/Lineups/"+ agent +"/" + map + "/" + site + "/"
        lu_list = os.listdir(path) # line-up lista

        for i in range(0,len(lu_list),3):
            # Kép betöltése
            pixmapStart = QPixmap(os.path.join(path, lu_list[i]))
            pixmapAim = QPixmap(os.path.join(path, lu_list[i+1]))
            pixmapFinish = QPixmap(os.path.join(path, lu_list[i+2]))
            if not pixmapStart.isNull() and not pixmapAim.isNull() and not pixmapFinish.isNull():
                pixmapStart = pixmapStart.scaled(1024, 576, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                pixmapAim = pixmapAim.scaled(512, 288, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                pixmapFinish = pixmapFinish.scaled(512, 288, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                
                # Nagy QLabel a képhez
                aim_label = QLabel(self)
                aim_label.setPixmap(pixmapStart)
                aim_label.setScaledContents(False)
                aim_label.resize(pixmapStart.size())



                # Kis QLabel a start és finish-hez
                start_label = QLabel(self)
                start_label.setPixmap(pixmapAim)
                finish_label = QLabel(self)
                finish_label.setPixmap(pixmapFinish)
                # Sorba rendezés (QHBoxLayout)
                row_layout = QHBoxLayout()
                small_row =QVBoxLayout()

                row_layout.addWidget(aim_label)  # Bal oldalon

                small_row.addWidget(start_label)# Jobb oldalon
                small_row.addWidget(finish_label)

                row_layout.addLayout(small_row)


                # Hozzáadjuk a fő vertikális layout-hoz
                self.scroll_layout.addLayout(row_layout)
                
                # if len(lu_list)<4:
                #     placeholder=QLabel(self)
                #     placeholderPixmap = QPixmap("PySideLearn/Valorant-Companion/placeholder.png")
                #     placeholderPixmap = placeholderPixmap.scaled(1024, 576, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                #     placeholder.setPixmap(placeholderPixmap)
                #     row_layout.addWidget(placeholder)

                #     miniplaceholder = QLabel(self)
                #     placeholderLayout=QVBoxLayout()
                #     placeholderPixmap = placeholderPixmap.scaled(512, 288, Qt.KeepAspectRatio, Qt.SmoothTransformation)
                #     miniplaceholder.setPixmap(placeholderPixmap)
                #     placeholderLayout.addWidget(miniplaceholder)
                #     placeholderLayout.addWidget(miniplaceholder)
                    
                #     row_layout.addLayout(placeholderLayout)
                #     self.scroll_layout.addWidget(row_layout)

    def returnHome(self):
        self.scroll_area.hide()
        self.logo_label.show()

        




# App execution
app = QApplication([])
screen_geometry = QGuiApplication.primaryScreen().geometry()  # 🔹 Képernyő mérete
window = MyApp()
window.setGeometry(screen_geometry)  # 🔹 Beállítja a méretet
window.showMaximized()
app.exec()

